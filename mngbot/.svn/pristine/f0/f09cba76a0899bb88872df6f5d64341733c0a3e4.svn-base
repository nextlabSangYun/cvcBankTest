/**
 * @title	: QA test case mapper
 * @package	: kr.co.nextlab.qa.mapper
 * @file	: QaTcMapper.java
 * @author	: winolonam
 * @date	: 2018. 07. 19.
 * @desc	: 
 */
package kr.co.nextlab.qa.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;

import kr.co.nextlab.qa.model.QaProjectModelVo;
import kr.co.nextlab.qa.model.FlawCriteria;
import kr.co.nextlab.qa.model.QaTcCategoryVo;
import kr.co.nextlab.qa.model.QaTcCriteria;
import kr.co.nextlab.qa.model.QaTcInfotVo;
import kr.co.nextlab.qa.model.QaXqmsFileVo;
import kr.co.nextlab.qa.model.QaXqmsVo;
import kr.co.nextlab.qa.model.QaXqmsFlawVo;

@Mapper
public interface QaTcMapper {

	/**
	 * 테스트 현황 조회
	 * @param pid
	 * @return
	 */
	public QaTcInfotVo selectTcStatList(String pid);
	
	/**
	 * 결함 현황 조회
	 * @param pid
	 * @return
	 */
	public QaTcInfotVo selectFlawStatList(String pid);
	
	/**
	 * 결함 관리 리스트 조회
	 * @param flawCriteria
	 * @return
	 */
	public List<QaTcInfotVo> selectFlawList(FlawCriteria flawCriteria);
	
	/**
	 * 결함 정보 조회
	 * @param tcId
	 * @return
	 */
	public QaTcInfotVo selectFlawView(int seq);
	
	/**
	 * 결함 정보 입력
	 * @param qaXqmsFlawVo
	 * @return
	 */
	public int mergeFlaw(QaXqmsFlawVo qaXqmsFlawVo);
	
	/**
	 * 카테고리 리스트 조회
	 * @param qaTcCategoryVo
	 * @return
	 */
	public List<QaTcCategoryVo> selectTcCategoryList(QaTcCategoryVo qaTcCategoryVo);
	
	/**
	 * 카테고리 등록
	 * @param qaTcCategoryVo
	 * @return
	 */
	public int insertTcCategory(QaTcCategoryVo qaTcCategoryVo);
	
	/**
	 * 카테고리 수정
	 * @param qaTcCategoryVo
	 * @return
	 */
	public int updateModTcCategory(QaTcCategoryVo qaTcCategoryVo);
	
	/**
	 * 카테고리 삭제
	 * @param qaTcCategoryVo
	 * @return
	 */
	public int updateDelTcCategory(QaTcCategoryVo qaTcCategoryVo);
	
	/**
	 * TC 리스트
	 * @param criteria
	 * @return
	 */
	public List<QaTcInfotVo> selectTcList(QaTcCriteria criteria);
	
	/**
	 * TC 추가
	 * @param qaTcInfotVo
	 * @return
	 */
	public int insertTc(QaTcInfotVo qaTcInfotVo);
	
	/**
	 * TC 삭제하기
	 * @param tcId
	 * @return
	 */
	public boolean updateTcUseYnPrc(String tcId);
	
	
	/**
	 * 테스트 케이스 조회(단일)
	 * @param criteria
	 * @return
	 */
	public QaTcInfotVo selectTc(QaTcCriteria criteria);
	
	/**
	 * 모델리스트
	 * @param pid
	 * @return
	 */
	public List<QaProjectModelVo> selectModelList(String pid);
	
	/**
	 * 리포트 등록
	 * @param qaXqmsVo
	 * @return
	 */
	public int insertRegReport(QaXqmsVo qaXqmsVo);
	
	/**
	 * 리포터 첨부파일 등록
	 * @param fileVo
	 * @return
	 */
	public int insertXqmsFile(QaXqmsFileVo fileVo);
	
	/**
	 * 최종 결과 업데이트
	 * @param qaTcVo
	 * @return
	 */
	public int updateLastResult(QaTcInfotVo qaTcInfotVo);
	
	/**
	 * 카테고리명 유무체크
	 * @param qaTcCategroyVo
	 * @return
	 */
	public QaTcCategoryVo selectCategoryChk(QaTcCategoryVo qaTcCategroyVo);
	
	/**
	 * 테스트 케이스 업데이트(비고, 파일)
	 * @param qaTcInfoVo
	 * @return
	 */
	public int updateTc(QaTcInfotVo qaTcInfoVo);
	
	/**
	 * 기존 첨부파일사게
	 * @param tcId
	 */
	public void deleteTcFile(String tcId);
	
	/**
	 * 파일 추가 및 수정
	 * @param qaTcInfoVo
	 * @return
	 */
	public int insertTcFile(QaTcInfotVo qaTcInfoVo);
	
	/**
	 * 카테고리 리스트 조회
	 * @param criteria
	 * @return
	 */
	public List<QaTcInfotVo> selectCateList(String pid);
	
}
