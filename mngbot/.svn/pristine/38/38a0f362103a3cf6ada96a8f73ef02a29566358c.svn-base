<%@ page contentType="text/html" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://www.nextlab.co.kr/tags/nextlab" prefix="nl"%>
<div class="pop_wrap" style="width:1080px;">
	<div class="pop_tit">
		<p>이슈 등록</p>
	</div>
	<div class="pop_cont">
		<!-- 18.01.09 수정 -->
		<div class="g_table02">
			<table>
				<caption>분류, 중요도, Test Case 이름을 확인 할 수 있는 표 입니다.</caption>
				<colgroup>
					<col style="width:120px;">
					<col>
				</colgroup>
				<tbody>
					<tr>
						<th>이슈 제목 </th>
						<td><input type="text" class="full" id="issueSubject" v-model.trim="issueView.issueSubject" maxlength="100"></td>
					</tr>
					<tr>
						<th>이슈 내용</th>
						<td><textarea class="full" id="issueCont" v-model.trim="issueView.issueCont"></textarea></td>
					</tr>
					<tr>
						<th>이슈 중요도</th>
						<td>
							<nl:select codeType="B100" v-model="issueView.importance"></nl:select>
						</td>
					</tr>
					<tr>
						<th>대분류</th>
						<td>
							<nl:select v-model = "issueView.issueLcateCd" codeType="D500"></nl:select>
						</td>
					</tr>
					<tr>
						<th>측정모델</th>
						<td>
							<project-model-select ref="modelSelect" :change-fn="addModelList" :pid="issueView.pid"></project-model-select>
							<div class="msm_list" v-if="issueView.modelList.length > 0" >
								<ul>
									<li v-for="(list, index) in issueView.modelList" >
										<span>{{list.modelNm}}({{list.modelVer}})</span>
										<button class="del" @click="delModelList(index)"></button>
									</li>
								</ul>
							</div>
						</td>
					</tr>
					<tr>
						<th>파일 첨부</th>
						<td class="file">
							<p class="note">최대 10MB까지 첨부 가능합니다</p>
							<input type="file" class="ir" id="file" name="file" @change="regFile"><label for="file" class="sch_file">파일찾기</label>
							<ul class="file_list">
								<li class="full" v-for="(fl, index) in issueView.fileList"><a @click="getFileDown(fl)">{{fl.orgFileNm}}</a><button class="del" @click="delFile(index)"></button></li>
							</ul>
						</td>
					</tr>
					<tr>
						<th>이슈할당 대상</th>
						<td colspan="3" class="sel_target">
							<div class="sel_sort">
								<user-select ref="userSelect" :add-fn="addPartiList"></user-select>
							</div>
							<div class="reg_list" v-show="issueView.partiList.length>0">
								<ul>
									<li v-for="(p, index) in issueView.partiList"><span>{{p.userNm}}({{p.userGroupNm}})</span><button class="del" @click="delPartiList(index)"></button></li>
								</ul>
							</div>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
		<p class="cate_tit">선택된 Test Case</p>
		<div class="g_table">
			<table>
				<caption>측정일시, 측정모델 등 확인 하는 표 입니다.</caption>
				<colgroup>
					<col style="width:10%;">
					<col style="width:10%;">
					<col style="width:10%;">
					<col style="width:12%;">
					<col style="width:10%;">
					<col>
				</colgroup>
				<thead>
					<tr>
						<th>구분</th>
						<th>대분류</th>
						<th>중분류</th>
						<th>소분류</th>
						<th>중요도</th>
						<th>Test Case</th>
					</tr>
				</thead>
				<tbody>
					<tr v-for="list in issueView.tcList">
						<td>{{ list.tcDivision | code(tcDivisionCodeNm) }}</td>
						<td>{{ list.bigCateId | tcCategory(tcCategoryList) }}</td>
						<td>{{ list.middleCateId | tcCategory(tcCategoryList) }}</td>
						<td>{{ list.smallCateId | tcCategory(tcCategoryList) }}</td>
						<td>{{ list.importance | code(importanceCode) }}</td>
						<td class="l_align">{{ list.tc }}</td>
					</tr>
					<tr v-if="issueView.tcList.length == 0">
						<td colspan="6">선택된 Test Case가 없습니다.</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	<div class="btn_wrap">
		<button class="g_btn01" @click="regIssue">등록</button>
		<button class="g_btn02" onclick="hidePopupLayer(); return false">닫기</button>
	</div>
</div>

<script>
	var frm = new Vue({
		el: '.pop_wrap'
		, data: {
			importanceCode: '<nl:codeListJson codeType="B100" />'
			, tcDivisionCodeNm: '<nl:codeListJson codeType="B900" />'
			, tcCategoryList: getListFromJsonStr('<nl:tcCateListJson pid="${param.pid}" />')
			, issueView: {
				issueSubject: ''
				, issueCont: ''
				, importance: 'B101'
				, pid: '<c:out value="${param.pid}"/>'
				, partiList: []
				, fileList: []
				, tcList: []
				, tcCateId: ''
				, modelList: []
				, issueLcateCd: 'D501'
			}
			, procChk: false
			// 1테스트관리, 2이슈관리
			, parentChk: '<c:out value="${param.parentChk}"/>'
			
		}
		, updated: function() {
			setPopup(2);
		}
		, beforeMount: function () {
			this.getTcList();
			this.initPartiList();
		}
		, mounted: function() {
			setPopup(2);
		}
		, methods: {
			getTcList: function() {
				var chkTcList = parent.list.getChkTc();
				if (chkTcList.length != 0) {
					var param = {
						pid: this.issueView.pid
						, seqArray: chkTcList
					}
					jQuery.ajaxSettings.traditional = true;
					$.post('/bmt/tc/getTcList', param, function(data){
						frm.issueView.tcList = data.tcList;
					});
				}
			}
			, setCateId: function(obj) {
				this.issueView.tcCateId = obj.bigCateId;
			}
			, addModelList: function(data){
				var chk = true;
				var modelList = this.issueView.modelList;
				for (var i=0; i < modelList.length; i++){
					if (modelList[i].modelId === data.modelId && modelList[i].modelVer === data.modelVer){
						chk = false;
						break;
					}
				}
				if (chk) {
					this.issueView.modelList.push({modelId: data.modelId, modelVer: data.modelVer, modelNm: data.modelNm});
				} else {
					alert("이미 추가된 측정모델입니다.");
				}
			}
			, delModelList: function(index){
				this.issueView.modelList.splice(index, 1);
			}
			, addPartiList: function(data) {
				var chk = this.issueView.partiList.some(function(p) {
					return p.partiId == data.userId;
				});
				
				if (!chk) {
					data.partiId = data.userId;
					this.issueView.partiList.push(data);
				}
				else {
					alert("이미 추가된 참여인력입니다.");
				}
			}
			, delPartiList: function(index) {
				this.issueView.partiList.splice(index, 1);
			}
			, regFile: function() {
				fileUpload($("#file"), {saveFilePath: "bmt/issue"}, function(data) {
					var file = {
						fileNm: data.saveFileNm
						, orgFileNm: data.realFileNm
						, filePath: data.saveFilePath
					}
					frm.issueView.fileList.push(file);
				});
			}
			, delFile: function(index) {
				this.issueView.fileList.splice(index, 1);
			}
			, regIssue: function() {
				var param = this.issueView;
				
				if (param.issueSubject == "") {
					alert("이슈 제목을 입력하세요.");
					$("#issueSubject").focus();
					return;
				}
				if (param.issueCont == "") {
					alert("이슈 내용을 입력하세요.");
					$("#issueCont").focus();
					return;
				}
				if (param.partiList.length == 0) {
					alert("이슈할당 대상을 추가하세요.");
					return;
				}
				if(param.issueLcateCd == ""){
					alert("대분류를 선택하세요.");
					return;
				}
				if (this.procChk) return;
				$.ajax({
					type: "post"
					, url : "/bmt/issue/regIssuePrc"
					, contentType: "application/json"
					, data : JSON.stringify(param)
					, beforeSend: function() { 
						frm.procChk = true;
						parent.startLoading();
					}
					, success: function(data) {
						if (data.save) {
							alert("이슈가 등록 되었습니다.");
							if (frm.parentChk == 2){
								parent.list.goCurrentPageList();
							}
							hidePopupLayer();
						} else if (data.message) {
							alert(data.message);
						}
					}
					, error: function(xhr, status, error) {
						alert($(xhr.responseText).text());
					}
					, complete : function() {
						frm.procChk = false;
						parent.endLoading();
					}
				});
				
			}
			, getFileDown: function(f) {
				fileDown(f.filePath, f.fileNm, f.orgFileNm);
			}
			, initPartiList: function() {
				$.get("/bmt/project/getProjectPartiList?pid="+ this.issueView.pid, function(data){
					data.projectPartiList.forEach(function(e){
						frm.issueView.partiList.push(e);
					});
				});
			}
		}
	});
</script>