<%@ page contentType="text/html" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://www.nextlab.co.kr/tags/nextlab" prefix="nl"%>
<div class="pop_wrap win_pop" style="width:1080px;">
	<div class="pop_tit">
		<p>투표 개설</p>
	</div>
	<div class="pop_cont">
		<div class="g_table02">
			<table>
				<caption>분류, 중요도, Test Case 이름을 확인 할 수 있는 표 입니다.</caption>
				<colgroup>
					<col style="width:120px;">
					<col>
				</colgroup>
				<tbody>
					<tr>
						<th>투표 제목* </th>
						<td><input type="text" class="full" id="voteSubject" v-model.trim="voteView.voteSubject" maxlength="100" placeholder="투표 제목을 입력하세요."></td>
					</tr>
					<tr>
						<th>투표 내용*</th>
						<td><textarea class="full" id="voteCont" v-model.trim="voteView.voteCont" placeholder="투표 내용을 입력하세요."></textarea></td>
					</tr>
					<tr>
						<th>투표 대상*</th>
						<td colspan="3" class="sel_target">
							<div class="sel_sort">
								<user-select ref="userSelect" :add-fn="addVoterList"></user-select>
							</div>
							<div class="reg_list" v-show="voteView.voterList.length>0">
								<ul>
									<li v-for="(p, index) in voteView.voterList"><span>{{p.userNm}}({{p.userGroupNm}})</span><button class="del" @click="delVoterList(index)"></button></li>
								</ul>
							</div>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
		<div class="tb_desc">
			<p class="cate_tit">이슈 목록</p>
			<div class="btn_wrap">
				<button class="g_btn03" @click="addIssueLargeAdd">이슈 추가</button>
				<button class="g_btn01" @click="deleteIssue">삭제</button>
			</div>
		</div>
		<div class="g_table">
			<table>
				<caption>측정일시, 측정모델 등 확인 하는 표 입니다.</caption>
				<colgroup>
					<col style="width:4%;">
					<col style="width:10%;">
					<col style="width:10%;">
					<col style="width:20%;">
					<col>
					<col style="width:20%;">
				</colgroup>
				<thead>
					<tr>
						<th><input type="checkbox" v-model="selectAll"></th>
						<th>중요도</th>
						<th>대분류</th>
						<th>측정모델</th>
						<th>이슈제목</th>
						<th>첨부파일</th>
					</tr>
				</thead>
				<tbody>
					<tr v-for="(listIssue, idx) in voteView.issueList">
						<td><input type="checkbox" name="issueCheck" v-model="listIssue.check"></td>
						<td><span :class="[listIssue.importance=='B101' ? 'state05' : listIssue.importance=='B103' ? 'state01' : listIssue.importance=='B102' ? 'state07' : 'state04']">{{ listIssue.importance | code(codeImportance) }}</span></td>
						<td><span style="line-height: 18px;">{{listIssue.issueLcateCd | code(lCateNm)}}<br></span></td>
						<td class="l_align">
							<span v-for="modelList in listIssue.modelList" style="line-height: 18px;">{{modelList.modelNm}}({{modelList.modelVer}})<br></span>
						</td>
						<td class="l_align">{{ listIssue.issueSubject }}</td>
						<td class="l_align">
							<span v-for="fileList in listIssue.fileList" style="line-height: 18px;"><a @click="getFileDown(fileList)" class="link">{{fileList.orgFileNm}}</a><br></span>
						</td>
					</tr>
					<tr v-if="voteView.issueList.length==0">
						<td colspan="6">등록된 이슈가 없습니다. 이슈를 추가해 주세요.</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	<div class="btn_wrap">
		<button class="g_btn01" @click="addVote">등록</button>
		<button class="g_btn02" onclick="window.close(); return false">닫기</button>
	</div>
</div>

<script>
	var view = new Vue({
		el: '.pop_wrap'
		, data: {
			voteView: {
				pid: '<c:out value="${param.pid}"/>'
				, voteSubject: ''
				, voteCont: ''
				, voterList: []
				, issueList: []
			}
			, codeImportance: '<nl:codeListJson codeType="B100" />'
			, lCateNm: '<nl:codeListJson codeType="D500" />'
		}
		, updated: function() {
		}
		, beforeMount: function () {
			this.$nextTick(function() {
				this.getCheckVote();
			});
		}
		, mounted: function() {
		}
		, computed: {
			selectAll: {
				get: function () {
					var total = this.voteView.issueList.length;
					var cnt = 0;
					this.voteView.issueList.forEach(function(issue) {
						if (issue.check) {
							cnt++;
						}
					});
					return total == cnt && cnt > 0;
				}
				, set: function (value) {
					$('[name="issueCheck"]').each(function() {
						$(this).prop('checked', value);
					});
					this.voteView.issueList.forEach(function(issue) {
						issue.check = value;
					});
				}
			}
		}
		, methods: {
			addVoterList: function(data) {
				var chk = this.voteView.voterList.some(function(p) {
					return p.voterId == data.userId;
				});
				
				if (!chk) {
					data.voterId = data.userId;
					this.voteView.voterList.push(data);
				} else {
					alert("이미 추가된 참여인력입니다.");
				}
			}
			, delVoterList: function(index) {
				this.voteView.voterList.splice(index, 1);
			}
			, addVote: function() {
				var param = view.voteView;
				if (param.voteSubject.length < 1){
					alert("투표 제목을 입력하세요.");
					return false;
				}
				
				if (param.voteCont.length < 1){
					alert("투표 내용을 입력하세요.");
					return false;
				}
				
				if (param.voterList.length < 1) {
					alert("투표 대상자를 추가해 주세요.");
					return false;
				}
				
				if (param.issueList.length < 1) {
					alert("투표할 이슈를 추가해 주세요.");
					return false;
				}
				
				var cmsg = "등록하시겠습니까?";
				if (confirm(cmsg)){
					$.ajax({
						type: "post"
						, url: "/bmt/issue/regVotePrc"
						, contentType: "application/json"
						, data : JSON.stringify(param)
						, success: function(data){
							if (data.save){
								alert("저장되었습니다.");
								window.close();
							} else {
								alert(data.message);
							}
						}
						, error: function(xhr, status, error){
							alert($(xhr.responseText).text());
						}
					});
				}
			}
			, addIssueLargeAdd: function() {
				popup('/bmt/issue/issueLargeAddForm?pid='+this.voteView.pid, '이슈 추가', 1200, 500, 'yes');
			}
			, selectIssue: function(issueIds) {
				var issueList = this.voteView.issueList;
				for (var i = issueIds.length-1; i>=0; i--) {
					var isOk = false;
					for (var j=0; j<issueList.length; j++) {
						if (issueIds[i] === issueList[j].issueId) {
							isOk = true;
							break;
						}
					}
					
					if (isOk) {
						issueIds.splice(i, 1);
					}
				}
				
				if (issueIds.length > 0) {
					var param = {issueIds : issueIds};
					$.ajax({
						type: "post"
						, url : "/bmt/issue/getIssueListByIssueIds"
						, contentType: "application/json"
						, data : JSON.stringify(param)
						, success: function(data) {
							data.issueList.forEach(function(issue) {
								view.voteView.issueList.push(issue);
							});
						}
						, error: function(xhr, status, error) {
							alert($(xhr.responseText).text());
						}
					});
				}
			}
			, getFileDown: function(list) {
				fileDown(list.filePath, list.fileNm, list.orgFileNm);
			}
			, getCheckVote: function() {
				var pid = this.voteView.pid;
				$.get("/bmt/issue/getCheckVote?pid="+ pid, function(data){
					if (data.isCheck) {
						alert('이미 등록된 투표가 있습니다.');
						opener.location.href = '/bmt/issue/decisionMaking?pid='+pid;
						window.close();
					}
				});
			}
			, deleteIssue: function() {
				var issueList = this.voteView.issueList;
				for (var i=issueList.length - 1; i>=0; i--) {
					if (issueList[i].check) {
						issueList.splice(i, 1);
					}
				}
			}
		}
	});
</script>