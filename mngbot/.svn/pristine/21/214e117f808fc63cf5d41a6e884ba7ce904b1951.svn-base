/**
 * @title	: QA test case service 구현
 * @package	: kr.co.nextlab.qa.service.impl
 * @file	: QaTcServiceImpl.java
 * @author	: winolonam
 * @date	: 2018. 07. 10.
 * @desc	: 
 */
package kr.co.nextlab.qa.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ejb.access.EjbAccessException;
import org.springframework.stereotype.Service;

import kr.co.nextlab.comm.service.SequenceService;
import kr.co.nextlab.qa.mapper.QaTcMapper;
import kr.co.nextlab.qa.model.QaTcCategoryVo;
import kr.co.nextlab.qa.model.QaTcInfotVo;
import kr.co.nextlab.qa.service.QaTcService;

@Service
public class QaTcServiceImpl implements QaTcService {
	
	@Autowired
	private QaTcMapper qaTcMapper;
	
	@Autowired
	private SequenceService sequenceService;

	/**
	 * 테스트 현황 조회
	 * @param pid
	 * @return
	 */
	@Override
	public QaTcInfotVo selectTcStatList(String pid) {
		return qaTcMapper.selectTcStatList(pid);
	}

	/**
	 * 결함 현황 조회
	 * @param pid
	 * @return
	 */
	@Override
	public QaTcInfotVo selectFlawStatList(String pid) {
		return qaTcMapper.selectFlawStatList(pid);
	}

	/**
	 * 카테고리 리스트 조회
	 * @param qaTcCategoryVo
	 * @return
	 */
	@Override
	public List<QaTcCategoryVo> selectTcCategoryList(QaTcCategoryVo qaTcCategoryVo) {
		return qaTcMapper.selectTcCategoryList(qaTcCategoryVo);
	}

	/**
	 * 카테고리 등록
	 * @param qaTcCategoryVo
	 * @return
	 */
	@Override
	public boolean insertTcCategory(QaTcCategoryVo qaTcCategoryVo) {
		qaTcCategoryVo.setTcCateId(sequenceService.getQaCategoryId());
		int cnt = qaTcMapper.insertTcCategory(qaTcCategoryVo);
		if (cnt != 1) {
			throw new EjbAccessException("리포트 등록이 실패하였습니다.");
		}
		return true;
	}

	/**
	 * 카테고리 수정
	 * @param qaTcCategoryVo
	 * @return
	 */
	@Override
	public boolean updateModTcCategory(QaTcCategoryVo qaTcCategoryVo) {
		int cnt = qaTcMapper.updateModTcCategory(qaTcCategoryVo);
		if (cnt != 1) {
			throw new EjbAccessException("카테고리 수정이 실패하였습니다.");
		}
		return true;
	}

	/**
	 * 카테고리 삭제
	 * @param qaTcCategoryVo
	 * @return
	 */
	@Override
	public boolean updateDelTcCategory(QaTcCategoryVo qaTcCategoryVo) {
		qaTcCategoryVo.setUseYn("N");
		int cnt = qaTcMapper.updateDelTcCategory(qaTcCategoryVo);
		if (cnt != 1) {
			throw new EjbAccessException("카테고리 삭제를 실패하였습니다.");
		}
		return true;
	}
}
