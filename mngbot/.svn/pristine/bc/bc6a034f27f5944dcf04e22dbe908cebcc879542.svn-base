/**
 * @title	: 구분값 리스트
 * @package	: kr.co.nextlab.tag
 * @file	: GubunTagNote.java
 * @author	: jnlee
 * @date	: 2017. 11. 14.
 * @desc	: 
 */
package kr.co.nextlab.tag;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import kr.co.nextlab.comm.model.GubunVo;
import lombok.Getter;

public class GubunTagNote {

	private static GubunTagNote instance = new GubunTagNote();

	public static GubunTagNote getInstance() {
		return instance;
	}

	private GubunTagNote() {
	}
	
	/**
	 * 구분키에 해당하는 구분리스트
	 * @param gubunKey 구분키
	 * @return 구분리스트
	 */
	@SuppressWarnings("unchecked")
	public static List<GubunVo> getGubunList(String gubunKey) {
		String methodName = gubunKey;
		if (!StringUtils.isEmpty(methodName)) {
			try {
				char ch = methodName.charAt(0);
				String getMethod = "get"
						+ methodName.replaceFirst(String.valueOf(ch), String.valueOf(Character.toUpperCase(ch)));

				Method method = instance.getClass().getMethod(getMethod, new Class[] {});
				return (List<GubunVo>)method.invoke(instance, new Object[] {});
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return null;
	}
	
	public static String getGubunNm(String gubunKey, String gubunValue) {
		List<GubunVo> gugunList = getGubunList(gubunKey);
		if (gugunList != null) {
			for (GubunVo vo : gugunList) {
				if (vo.getKey().equals(gubunValue))
					return vo.getValue();
			}
		}
		return null;
	}

	/**
	 * 예/아니오
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> ynboolean = new ArrayList<GubunVo>(2) {
		{
			add(new GubunVo("Y", "예"));
			add(new GubunVo("N", "아니오"));
		}
	};

	/**
	 * 사용/미사용
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> useYnboolean = new ArrayList<GubunVo>(2) {
		{
			add(new GubunVo("Y", "사용"));
			add(new GubunVo("N", "미사용"));
		}
	};

	/**
	 * 가능/불가능
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> checkYnboolean = new ArrayList<GubunVo>(2) {
		{
			add(new GubunVo("Y", "가능"));
			add(new GubunVo("N", "불가능"));
		}
	};
	
	/**
	 * 활성/비활성
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> activeYnboolean = new ArrayList<GubunVo>(2) {
		{
			add(new GubunVo("Y", "활성"));
			add(new GubunVo("N", "비활성"));
		}
	};
	
	/**
	 * 휴대전화번호 앞자리
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> phonePattern = new ArrayList<GubunVo>(6) {
		{
			add(new GubunVo("010", "010"));
			add(new GubunVo("011", "011"));
			add(new GubunVo("016", "016"));
			add(new GubunVo("017", "017"));
			add(new GubunVo("018", "018"));
			add(new GubunVo("019", "019"));
		}
	};

	/**
	 * 리스트사이즈
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> rows = new ArrayList<GubunVo>(6) {
		{
			add(new GubunVo("20", "20개"));
			add(new GubunVo("50", "50개"));
			add(new GubunVo("100", "100개"));
			add(new GubunVo("200", "200개"));
			add(new GubunVo("300", "300개"));
			add(new GubunVo("500", "500개"));
		}
	};
	
	/**
	 * passed/미완료
	 */
	@Getter
	@SuppressWarnings("serial")
	private final List<GubunVo> passYnboolean = new ArrayList<GubunVo>(2) {
		{
			add(new GubunVo("Y", "완료"));
			add(new GubunVo("N", "미완료"));
		}
	};
	
}
