/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-11-22 01:55:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.qa.tc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tcLargeAddForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"pop_wrap\" style=\"width:500px;\" id=\"largeAdd\">\r\n");
      out.write("\t<div class=\"pop_tit\">\r\n");
      out.write("\t\t<p>테스트 케이스 대량 등록</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t\t<button class=\"btn_default\" @click=\"getSampleExcelDown\"><span>양식 다운로드</span></button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"pop_cont\">\r\n");
      out.write("\t\t<div class=\"g_table02\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<caption>대량 등록하는 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t<col style=\"width:100px;\">\r\n");
      out.write("\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>파일 첨부</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"note\">최대 10MB까지 첨부 가능합니다</p>\r\n");
      out.write("\t\t\t\t\t\t\t<form id=\"fileForm\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return false;\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"file\" class=\"ir\" id=\"file\" name=\"file\" @change=\"regFile\" accept=\".xlsx, .xls\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"file\" class=\"sch_file\">파일찾기</label>\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"file_list\" v-show=\"orgFileNm\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a @click=\"fileDown\">{{orgFileNm}}</a><button class=\"del\" @click=\"delFile\"></button></li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t<button class=\"btn_proc\" v-on:click=\"submit\">등록</button>\r\n");
      out.write("\t\t<button class=\"btn_cancel\" onclick=\"hidePopupLayer(); return false\">닫기</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar largeAdd = new Vue({\r\n");
      out.write("\t\tel: '#largeAdd',\r\n");
      out.write("\t\tdata: {\r\n");
      out.write("\t\t\tfileNm: ''\r\n");
      out.write("\t\t\t, filePath: ''\r\n");
      out.write("\t\t\t, orgFileNm: ''\r\n");
      out.write("\t\t\t, pid: '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tupdated:function(){\r\n");
      out.write("\t\t\tsetPopup(2);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tmounted:function(){\r\n");
      out.write("\t\t\tsetPopup(2);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tmethods:{\r\n");
      out.write("\t\t\tregFile: function() {\r\n");
      out.write("\t\t\t\tfileUpload($(\"#file\"), {saveFilePath: \"hded/tc\"}, function(data) {\r\n");
      out.write("\t\t\t\t\tlargeAdd.fileNm = data.saveFileNm;\r\n");
      out.write("\t\t\t\t\tlargeAdd.orgFileNm = data.realFileNm;\r\n");
      out.write("\t\t\t\t\tlargeAdd.filePath = data.saveFilePath;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, delFile: function() {\r\n");
      out.write("\t\t\t\tthis.fileNm = \"\";\r\n");
      out.write("\t\t\t\tthis.orgFileNm = \"\";\r\n");
      out.write("\t\t\t\tthis.filePath = \"\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, fileDown: function() {\r\n");
      out.write("\t\t\t\tfileDown(this.filePath, this.fileNm, this.orgFileNm);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, submit: function() {\r\n");
      out.write("\t\t\t\tvar param = {\r\n");
      out.write("\t\t\t\t\tfilePath: this.filePath\r\n");
      out.write("\t\t\t\t\t,fileNm: this.fileNm\r\n");
      out.write("\t\t\t\t\t,orgFileNm: this.orgFileNm\r\n");
      out.write("\t\t\t\t\t,pid: this.pid\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tif (this.filePath === '' || this.fileNm === '') {\r\n");
      out.write("\t\t\t\t\talert(\"업로드할 파일을 선택하세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tparent.startLoading();\r\n");
      out.write("\t\t\t\t$.post('/qa/tc/regLargeAddFile', param, function(data){\r\n");
      out.write("\t\t\t\t\tif (data.save) {\r\n");
      out.write("\t\t\t\t\t\talert('저장되었습니다.');\r\n");
      out.write("\t\t\t\t\t\tparent.window.location.reload();\r\n");
      out.write("\t\t\t\t\t\thidePopupLayer();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert(data.message);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tparent.endLoading();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getSampleExcelDown: function() {\r\n");
      out.write("\t\t\t\tfileDown('/sample', 'qa_tc_regist_form.xlsx', '테스트케이스_엑셀대량등록_양식.xlsx');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/qa/tc/tcLargeAddForm.jsp(51,11) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }
}
