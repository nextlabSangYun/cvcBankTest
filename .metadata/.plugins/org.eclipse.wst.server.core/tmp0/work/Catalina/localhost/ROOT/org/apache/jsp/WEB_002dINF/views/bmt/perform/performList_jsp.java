/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-04-24 01:07:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.bmt.perform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class performList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"/css/kendo.common-material.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/css/kendo.material.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/kendo.all.min.js\"></script>\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"sub_layout has_snb\">\r\n");
      out.write("\t\t<div class=\"cont_wrap\">\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<iframe :src=\"iFrameSrc\" width=\"100%\" height=\"1000\"></iframe>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar cont = new Vue({\r\n");
      out.write("\t\tel: '.content'\r\n");
      out.write("\t\t, data: {\r\n");
      out.write("\t\t\tpid: '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, projectStat: ''\r\n");
      out.write("\t\t\t, projectStDt: ''\r\n");
      out.write("\t\t\t, projectEndDt: ''\r\n");
      out.write("\t\t\t, modelList: []\r\n");
      out.write("\t\t\t, modelVerList: []\r\n");
      out.write("\t\t\t, currChSts: {}\r\n");
      out.write("\t\t\t, compChSts: {}\r\n");
      out.write("\t\t\t, currUiSts: {}\r\n");
      out.write("\t\t\t, compUiSts: {}\r\n");
      out.write("\t\t\t, compSel: ''\r\n");
      out.write("\t\t\t, performYnVal: ''\r\n");
      out.write("\t\t\t, performYn: false\r\n");
      out.write("\t\t\t, pass: false\r\n");
      out.write("\t\t\t, param: {}\r\n");
      out.write("\t\t\t, iFrameSrc:\"\"\r\n");
      out.write("\t\t\t, reportUrl: '");
      if (_jspx_meth_nl_005fproperty_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, reportPath: '");
      if (_jspx_meth_nl_005fproperty_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, mounted: function() {\r\n");
      out.write("\t\t\tthis.getProjectStat();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, methods: {\r\n");
      out.write("\t\t\t// 조회된 데이터 초기화\r\n");
      out.write("\t\t\tinit: function(){\r\n");
      out.write("\t\t\t\tthis.currChSts = [];\r\n");
      out.write("\t\t\t\tthis.compChSts = [];\r\n");
      out.write("\t\t\t\tthis.currUiSts = [];\r\n");
      out.write("\t\t\t\tthis.compUiSts = [];\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getModelInfo: function(o) {\r\n");
      out.write("\t\t\t\tthis.param.modelId = o.modelId;\r\n");
      out.write("\t\t\t\tthis.param.modelVer = o.modelVer;\r\n");
      out.write("\t\t\t\tthis.param.pid = o.pid;\r\n");
      out.write("\t\t\t\tthis.performYnVal = o.performYn;\r\n");
      out.write("\t\t\t\tthis.getModelVerList();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getModelVerList: function() {\r\n");
      out.write("\t\t\t\tthis.compSel='';\r\n");
      out.write("\t\t\t\tvar modelVerTemp= [];\r\n");
      out.write("\t\t\t\tvar performYn = this.performYnVal;\r\n");
      out.write("\t\t\t\tvar selPerformYn = $(\"[name='modelSeq'] > option:selected\").attr(\"data-performYn\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 패스여부\r\n");
      out.write("\t\t\t\tif (performYn == 'Y' || selPerformYn == 'Y') {\r\n");
      out.write("\t\t\t\t\tcont.performYn = true;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tcont.performYn = false;\r\n");
      out.write("\t\t\t\t\t$.get('/bmt/xqms/getXqmsModelVerList?modelId='+cont.param.modelId, function(data) {\r\n");
      out.write("\t\t\t\t\t\tdata.xqmsModelVerList.forEach(function(o){\r\n");
      out.write("\t\t\t\t\t\t\tif (cont.param.modelVer != o.modelVer) {\r\n");
      out.write("\t\t\t\t\t\t\t\tmodelVerTemp.push(o);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\tcont.modelVerList = modelVerTemp;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 상세보기\r\n");
      out.write("\t\t\t, goView: function(name){\r\n");
      out.write("\t\t\t\tvar url = '';\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (name == 'ch') {\r\n");
      out.write("\t\t\t\t\turl = \"/bmt/perform/performChDetailList\";\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\turl = \"/bmt/perform/performUiDetailList\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tshowPopupLayer(url);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 통계데이터 조회\r\n");
      out.write("\t\t\t, getStsView: function(){\r\n");
      out.write("\t\t\t\tvar param = this.param;\r\n");
      out.write("\t\t\t\tparam.compModelVer = $(\"#compSel > option:selected\").attr(\"data-modelVer\");\r\n");
      out.write("\t\t\t\tparam.compPid = $(\"#compSel > option:selected\").attr(\"data-pid\");\r\n");
      out.write("\t\t\t\tparam.performYn = this.performYn ? 'Y' : 'N';\r\n");
      out.write("\t\t\t\tthis.pass = param.performYn == 'Y' ? true : false;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (isEmpty($(\"[name='modelSeq']\").val())) {\r\n");
      out.write("\t\t\t\t\talert(\"측정모델을 선택해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else if (isEmpty($(\"#compSel\").val()) && $(\"#compSel\").length != 0) {\r\n");
      out.write("\t\t\t\t\talert(\"상용버전을 선택해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tthis.init();\r\n");
      out.write("\t\t\t\t$.post('/bmt/xqms/getStsView', param, function(data){\r\n");
      out.write("\t\t\t\t\tif (!isEmpty(data.currChSts)) {\r\n");
      out.write("\t\t\t\t\t\tcont.currChSts = data.currChSts;\r\n");
      out.write("\t\t\t\t\t\tif (!isEmpty(data.compChSts)) {\r\n");
      out.write("\t\t\t\t\t\t\tcont.compChSts = data.compChSts;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tcont.getChart('ch');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif (!isEmpty(data.currUiSts)) {\r\n");
      out.write("\t\t\t\t\t\tcont.currUiSts = data.currUiSts;\r\n");
      out.write("\t\t\t\t\t\tif (!isEmpty(data.compUiSts)) {\r\n");
      out.write("\t\t\t\t\t\t\tcont.compUiSts = data.compUiSts;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tcont.getChart('ui');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 차트\r\n");
      out.write("\t\t\t, getChart: function(name){\r\n");
      out.write("\t\t\t\tvar series, categories = [];\r\n");
      out.write("\t\t\t\tvar chartId, modelNm = '';\r\n");
      out.write("\t\t\t\tvar cuCh = this.currChSts;\r\n");
      out.write("\t\t\t\tvar coCh = this.compChSts;\r\n");
      out.write("\t\t\t\tvar cuUi = this.currUiSts;\r\n");
      out.write("\t\t\t\tvar coUi = this.compUiSts;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (name == 'ch') {\r\n");
      out.write("\t\t\t\t\tchartId = $(\"#chChart\");\r\n");
      out.write("\t\t\t\t\tmodelNm = cuCh.modelNm;\r\n");
      out.write("\t\t\t\t\tif (cont.performYn) {\r\n");
      out.write("\t\t\t\t\t\tcategories = [\"측정모델\\n(\"+cuCh.modelVer+\")\"]\r\n");
      out.write("\t\t\t\t\t\tseries = [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  {stack:\"1\", name: \"A구간\", data: [cuCh.totRemoconReactTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"1\", name: \"B구간\", data: [cuCh.totFirstStopTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"1\", name: \"C구간\", data: [cuCh.totSecondStopTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"2\", name: \"네트워크 반응시간\", data: [cuCh.totNtwTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tcategories = [\"측정모델\\n(\"+cuCh.modelVer+\")\", \"상용버전\\n(\"+coCh.modelVer+\")\"]\r\n");
      out.write("\t\t\t\t\t\tseries = [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  {stack:\"1\", name: \"A구간\", data: [cuCh.totRemoconReactTime, coCh.totRemoconReactTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"1\", name: \"B구간\", data: [cuCh.totFirstStopTime, coCh.totFirstStopTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"1\", name: \"C구간\", data: [cuCh.totSecondStopTime, coCh.totSecondStopTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"2\", name: \"네트워크 반응시간\", data: [cuCh.totNtwTime, coCh.totNtwTime]}\r\n");
      out.write("\t\t\t\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tchartId = $(\"#uiChart\");\r\n");
      out.write("\t\t\t\t\tmodelNm = cuUi.modelNm;\r\n");
      out.write("\t\t\t\t\tif (cont.performYn) {\r\n");
      out.write("\t\t\t\t\t\tcategories = [\"측정모델\\n(\"+cuUi.modelVer+\")\"];\r\n");
      out.write("\t\t\t\t\t\tseries = [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  {stack:\"1\", name: \"매칭\", data: [cuUi.matchTimeAvg]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"2\", name: \"커서\", data: [cuUi.reactTimeAvg]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"3\", name: \"변화율\", data: [cuUi.diffTimeAvg]}\r\n");
      out.write("\t\t\t\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tcategories = [\"측정모델\\n(\"+cuUi.modelVer+\")\", \"상용버전\\n(\"+coUi.modelVer+\")\"];\r\n");
      out.write("\t\t\t\t\t\tseries = [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  {stack:\"1\", name: \"매칭\", data: [cuUi.matchTimeAvg, coUi.matchTimeAvg]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"2\", name: \"커서\", data: [cuUi.reactTimeAvg, coUi.reactTimeAvg]}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, {stack:\"3\", name: \"변화율\", data: [cuUi.diffTimeAvg, coUi.diffTimeAvg]}\r\n");
      out.write("\t\t\t\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tchartId.kendoChart({\r\n");
      out.write("\t\t\t\t\ttitle: {\r\n");
      out.write("\t\t\t\t\t\ttext: modelNm\r\n");
      out.write("\t\t\t\t\t\t, color: \"#000000\"\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, legend: {\r\n");
      out.write("\t\t\t\t\t\tposition: \"bottom\"\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, seriesDefaults: {\r\n");
      out.write("\t\t\t\t\t\ttype: \"bar\"\r\n");
      out.write("\t\t\t\t\t\t, stack: true\r\n");
      out.write("\t\t\t\t\t\t, labels: {\r\n");
      out.write("\t\t\t\t\t\t\tvisible: true\r\n");
      out.write("\t\t\t\t\t\t\t, background: \"transparent\"\r\n");
      out.write("\t\t\t\t\t\t\t, position : \"center\"\r\n");
      out.write("\t\t\t\t\t\t\t, template: \"#= cont.tempFormat(value) #\"\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, chartArea: {\r\n");
      out.write("\t\t\t\t\t\theight: 300\r\n");
      out.write("\t\t\t\t\t\t, width: 1077\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, series: series\r\n");
      out.write("\t\t\t\t\t, categoryAxis: {\r\n");
      out.write("\t\t\t\t\t\tcategories: categories\r\n");
      out.write("\t\t\t\t\t\t, majorGridLines: {\r\n");
      out.write("\t\t\t\t\t\t\tvisible: false\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, tooltip: {\r\n");
      out.write("\t\t\t\t\t\tvisible: true\r\n");
      out.write("\t\t\t\t\t\t, format: \"##,#\"\r\n");
      out.write("\t\t\t\t\t\t, template: \"#= series.name #: #= value #\"\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t, tempFormat: function(value) {\r\n");
      out.write("\t\t\t\tif (value == 0) {\r\n");
      out.write("\t\t\t\t\treturn \"\";\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\treturn value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// pass 처리\r\n");
      out.write("\t\t\t, performPass: function() {\r\n");
      out.write("\t\t\t\tif (this.performYn) {\r\n");
      out.write("\t\t\t\t\talert(\"이미완료처리 되었습니다.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (confirm(\"완료처리를 하시겠습니까?\")){\r\n");
      out.write("\t\t\t\t\t$.post('/bmt/project/modPerformYnPrc', this.param, function(data){\r\n");
      out.write("\t\t\t\t\t\tif (data.save) {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"완료 처리되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t$(\"[name='modelSeq'] > option:selected\").attr(\"data-performYn\",\"Y\");\r\n");
      out.write("\t\t\t\t\t\t\tcont.performYn = true;\r\n");
      out.write("\t\t\t\t\t\t\tcont.getStsView();\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"완료 처리실패하였습니다.\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 성능평가 결과 전달\r\n");
      out.write("\t\t\t, goSendMail: function() {\r\n");
      out.write("\t\t\t\tshowPopupLayer('/bmt/perform/performResultForm');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 엑셀다운로드\r\n");
      out.write("\t\t\t, getExcelDown: function() {\r\n");
      out.write("\t\t\t\tthis.param.performYn = this.performYn ? 'Y' : 'N';\r\n");
      out.write("\t\t\t\texcelFileDown(\"/bmt/xqms/getXqmsStsListExcel\", this.param);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 현재 프로젝트 상태 조회\r\n");
      out.write("\t\t\t, getProjectStat: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/bmt/project/getProjectView?pid=\"+ this.pid, function(data){\r\n");
      out.write("\t\t\t\t\tcont.projectStat = data.projectView.projectStat;\r\n");
      out.write("\t\t\t\t\tcont.projectStDt = data.projectView.projectStDt;\r\n");
      out.write("\t\t\t\t\tcont.projectEndDt = data.projectView.projectEndDt;\r\n");
      out.write("\t\t\t\t\tcont.iFrameSrc = cont.reportUrl+cont.reportPath+\"performance?pid=\"+cont.pid+\"&startDate=\"+cont.projectStDt+\"&endDate=\"+cont.projectEndDt;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, computed: {\r\n");
      out.write("\t\t\tcalChMin: function() {\r\n");
      out.write("\t\t\t\treturn this.currChSts.totMin - this.compChSts.totMin;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calChMax: function() {\r\n");
      out.write("\t\t\t\treturn this.currChSts.totMax - this.compChSts.totMax;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calChAvg: function() {\r\n");
      out.write("\t\t\t\treturn this.currChSts.totAvg - this.compChSts.totAvg;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t, calUiMtMin: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.matchTimeMin - this.compUiSts.matchTimeMin;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calUiMtMax: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.matchTimeMax - this.compUiSts.matchTimeMax;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calUiMtAvg: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.matchTimeAvg - this.compUiSts.matchTimeAvg;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t, calUiRtMin: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.reactTimeMin - this.compUiSts.reactTimeMin;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calUiRtMax: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.reactTimeMax - this.compUiSts.reactTimeMax;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calUiRtAvg: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.reactTimeAvg - this.compUiSts.reactTimeAvg;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t, calUiDtMin: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.diffTimeMin - this.compUiSts.diffTimeMin;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calUiDtMax: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.diffTimeMax - this.compUiSts.diffTimeMax;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, calUiDtAvg: function() {\r\n");
      out.write("\t\t\t\treturn this.currUiSts.diffTimeAvg - this.compUiSts.diffTimeAvg;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/bmt/perform/performList.jsp(20,9) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fproperty_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:property
    kr.co.nextlab.tag.PropertyTag _jspx_th_nl_005fproperty_005f0 = (kr.co.nextlab.tag.PropertyTag) _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.get(kr.co.nextlab.tag.PropertyTag.class);
    _jspx_th_nl_005fproperty_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fproperty_005f0.setParent(null);
    // /WEB-INF/views/bmt/perform/performList.jsp(36,17) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fproperty_005f0.setKey("report.url");
    int _jspx_eval_nl_005fproperty_005f0 = _jspx_th_nl_005fproperty_005f0.doStartTag();
    if (_jspx_th_nl_005fproperty_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.reuse(_jspx_th_nl_005fproperty_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.reuse(_jspx_th_nl_005fproperty_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fproperty_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:property
    kr.co.nextlab.tag.PropertyTag _jspx_th_nl_005fproperty_005f1 = (kr.co.nextlab.tag.PropertyTag) _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.get(kr.co.nextlab.tag.PropertyTag.class);
    _jspx_th_nl_005fproperty_005f1.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fproperty_005f1.setParent(null);
    // /WEB-INF/views/bmt/perform/performList.jsp(37,18) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fproperty_005f1.setKey("report.path");
    int _jspx_eval_nl_005fproperty_005f1 = _jspx_th_nl_005fproperty_005f1.doStartTag();
    if (_jspx_th_nl_005fproperty_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.reuse(_jspx_th_nl_005fproperty_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fproperty_0026_005fkey_005fnobody.reuse(_jspx_th_nl_005fproperty_005f1);
    return false;
  }
}
