/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-10-02 01:13:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.bot;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"/css/fullcalendar.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/css/fullcalendar.print.min.css\" rel=\"stylesheet\" media=\"print\">\r\n");
      out.write("<script src=\"/js/fullcalendar.min.js\"></script>\r\n");
      out.write("<script src=\"/js/locale-all.js\"></script>\r\n");
      out.write("<script src=\"/js/gcal.min.js\"></script>\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"main_cnt\" style=\"background-image:url('/images/bot/bg_main.png')\">\r\n");
      out.write("\t\t<div class=\"inner\">\r\n");
      out.write("\t\t\t<section class=\"dashboard\">\r\n");
      out.write("\t\t\t\t<!-- 17.12.12 타이틀 영역 -->\r\n");
      out.write("\t\t\t\t<div class=\"sec_tit\"><p>Dashboard</p></div>\r\n");
      out.write("\t\t\t\t<div class=\"widget_list\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- BMT > 일정관리 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"widget\" v-if=\"widCalendar.widgetId != null\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_tit\">\r\n");
      out.write("\t\t\t\t\t\t\t<p>{{ widCalendar.appNm }} <span>{{ widCalendar.widgetNm }}</span></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"calendar\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn_delete\" @click=\"delUserWidgetPrc(widCalendar.widgetId)\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- QA > 일정관리 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"widget\" v-if=\"widQaCalendar.widgetId != null\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_tit\">\r\n");
      out.write("\t\t\t\t\t\t\t<p>{{ widQaCalendar.appNm }} <span>{{ widQaCalendar.widgetNm }}</span></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"qaCalendar\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn_delete\" @click=\"delUserWidgetPrc(widQaCalendar.widgetId)\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- BMT > 진행현황 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"widget\" v-if=\"widProject.widgetId != null\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_tit\">\r\n");
      out.write("\t\t\t\t\t\t\t<p>{{ widProject.appNm }} <span>{{ widProject.widgetNm }}</span></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"app_state_wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"app_state\" v-for=\"list in projectStatusList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p class=\"app_tit\"><a href=\"#\" @click=\"goPage('pjMain',list.pid)\">{{ list.projectNm }}</a></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"con_col2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"l_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"date\">{{ list.projectStDt }} ~ {{ list.projectEndDt }}</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"st_txt\" v-if=\"list.chasuWaitYn == 'Y'\">{{ list.projectChasu }}차 대기중</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"st_txt\" v-else>{{ list.projectChasu }}차 진행중</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"r_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"item\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" @click=\"goPage('tcList',list.pid)\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- 1% ~ 50% 사이에서는 (해당% * 3.6deg) 스타일 적용  -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- 50% ~ 100% 사이에서는 (100%-해당%) * -3.6deg 스타일 적용 // grape 태그에 over 클래스 추가 // 100% 일 때 st_grape 태그에 full 클래스 추가 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['st_grape', list.xqmsPercent==100 ? 'full' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['grape', list.xqmsPercent>50 ? 'over' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"bar\" :style=\"{transform:'rotate('+setRotate(list.xqmsPercent)+')'}\" v-if =\"list.xqmsPercent>0\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"per\">{{ list.xqmsPercent }}<span>%</span></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"tit\">테스트현황</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"num\">({{ list.testIngCnt }}/{{ list.testCnt }})</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"item\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" @click=\"goPage('issueList',list.pid)\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['st_grape', 'red', list.issuePercent==100 ? 'full' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['grape', list.issuePercent>50 ? 'over' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"bar\" :style=\"{transform:'rotate('+setRotate(list.issuePercent)+')'}\" v-if =\"list.issuePercent>0\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"per\">{{ list.issuePercent }}<span>%</span></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"tit\">이슈현황</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"num\">({{ list.issueSuccessCnt }}/{{ list.issueCnt }})</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn_delete\" @click=\"delUserWidgetPrc(widProject.widgetId)\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- QA > 진행현황 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"widget\" v-if=\"widQaProject.widgetId != null\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_tit\">\r\n");
      out.write("\t\t\t\t\t\t\t<p>{{ widQaProject.appNm }} <span>{{ widQaProject.widgetNm }}</span></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"app_state_wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"app_state\" v-for=\"list in qaProjectStatusList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p class=\"app_tit\"><a href=\"#\" @click=\"goPage('pjMain',list.pid,'qa')\">{{ list.projectNm }}</a></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"con_col2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"l_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"date\">{{ list.projectStDt }} ~ {{ list.projectEndDt }}</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"st_txt\" v-if=\"list.chasuStat == 'Y'\">{{ list.chasu }}차 진행중</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"st_txt\" v-else>{{ list.chasu }}차 수정개발중</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"r_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"item\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" @click=\"goPage('tcList',list.pid,'qa')\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- 1% ~ 50% 사이에서는 (해당% * 3.6deg) 스타일 적용  -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- 50% ~ 100% 사이에서는 (100%-해당%) * -3.6deg 스타일 적용 // grape 태그에 over 클래스 추가 // 100% 일 때 st_grape 태그에 full 클래스 추가 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['st_grape', list.testPercent==100 ? 'full' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['grape', list.testPercent>50 ? 'over' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"bar\" :style=\"{transform:'rotate('+setRotate(list.testPercent)+')'}\" v-if =\"list.testPercent>0\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"per\">{{ list.testPercent }}<span>%</span></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"tit\">테스트현황</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"num\">({{ list.testIngCnt }}/{{ list.testCnt }})</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"item\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" @click=\"goPage('flawList',list.pid,'qa')\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['st_grape', 'red', list.flawPercent==100 ? 'full' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class=\"['grape', list.flawPercent>50 ? 'over' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"bar\" :style=\"{transform:'rotate('+setRotate(list.flawPercent)+')'}\" v-if =\"list.flawPercent>0\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"per\">{{ list.flawPercent }}<span>%</span></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"tit\">결함관리현황</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"num\">({{ list.testFlawCnt }}/{{ list.testFailCnt }})</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn_delete\" @click=\"delUserWidgetPrc(widQaProject.widgetId)\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 통계분석 > Favorite Reports -->\r\n");
      out.write("\t\t\t\t\t<div class=\"widget\" v-if=\"widStats.widgetId != null\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_tit\">\r\n");
      out.write("\t\t\t\t\t\t\t<p>{{ widStats.appNm }} <span>{{ widStats.widgetNm }}</span></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"wig_cont\">\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"wig_stats_list\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"ico_rpt\" v-for=\"list in favoritesReportList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<a @click=\"openReportPop(list.reportUrl)\" v-bind:style=\"{background:list.color}\" class=\"rd_rpt\"><span>{{ list.reportCd }}</span></a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p class=\"name\"><a @click=\"openReportPop(list.reportUrl)\"><span v-html=\"list.reportNm\"></span></a></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn_delete\" @click=\"delUserWidgetPrc(widStats.widgetId)\">삭제하기</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<button class=\"btn_add\" onclick=\"goShowPopupLayer('/bot/user/widgetForm'); return false;\">앱 위젯 추가하기</button>\r\n");
      out.write("\t\t\t</section>\r\n");
      out.write("\t\t\t<section class=\"fav_apps\">\r\n");
      out.write("\t\t\t\t<!-- 17.12.12 타이틀 영역 -->\r\n");
      out.write("\t\t\t\t<div class=\"sec_tit\"><p>Favorite App</p></div>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li v-for=\"(app, index) in getFavoriteList\" :class=\"{'fav':app.favorite}\">\r\n");
      out.write("\t\t\t\t\t\t<a :href=\"app.appUrl\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"app_icon\"><img :src=\"getFavImg(index)\" :alt=\"app.appNm\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"app_name\">{{app.appNm}}</span>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</section>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar mainView = new Vue({\r\n");
      out.write("\t\tel: '.content'\r\n");
      out.write("\t\t, data: {\r\n");
      out.write("\t\t\tappList: []\r\n");
      out.write("\t\t\t, projectStatusList: []\r\n");
      out.write("\t\t\t, qaProjectStatusList: []\r\n");
      out.write("\t\t\t, favoritesReportList: []\r\n");
      out.write("\t\t\t, codeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, userWidgetList: []\r\n");
      out.write("\t\t\t, widCalendar: {}\r\n");
      out.write("\t\t\t, widProject: {}\r\n");
      out.write("\t\t\t, widStats: {}\r\n");
      out.write("\t\t\t, widQaCalendar: {}\r\n");
      out.write("\t\t\t, widQaProject: {}\r\n");
      out.write("\t\t\t, updateCal : false\r\n");
      out.write("\t\t\t, updateQaCal : false\r\n");
      out.write("\t\t\t, wallpaperView: {}\r\n");
      out.write("\t\t\t, img: '/images/bot/bg_main.png'\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, beforeMount: function() {\r\n");
      out.write("\t\t\tthis.getUserWidgetList();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, mounted: function() {\r\n");
      out.write("\t\t\tthis.$nextTick(function() {\r\n");
      out.write("\t\t\t\tthis.getBgImg();\r\n");
      out.write("\t\t\t\tvar appListJsonStr = '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\t\t\tif (appListJsonStr)\r\n");
      out.write("\t\t\t\t\tthis.appList = JSON.parse(decodeURIComponent(appListJsonStr).replace(/\\+/g, ' '));\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, updated: function() {\r\n");
      out.write("\t\t\tif (this.updateCal) {\r\n");
      out.write("\t\t\t\tthis.getCalendarView();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (this.updateQaCal) {\r\n");
      out.write("\t\t\t\tthis.getQaCalendarView();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, computed: {\r\n");
      out.write("\t\t\tgetFavoriteList: function() {\r\n");
      out.write("\t\t\t\treturn this.appList.filter(function(app) {\r\n");
      out.write("\t\t\t\t\treturn app.favorite != \"\";\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, methods: {\r\n");
      out.write("\t\t\tgoPage: function(pageNm,pid,appNm) {\r\n");
      out.write("\t\t\t\tif (appNm == 'qa') {\r\n");
      out.write("\t\t\t\t\tif (pageNm == 'tcList') {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = '/qa/tc/tcList?pid='+pid;\r\n");
      out.write("\t\t\t\t\t} else if (pageNm == 'flawList') {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = '/qa/flaw/flawList?pid='+pid;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = '/qa/projectMain?pid='+pid;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (pageNm == 'tcList') {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = '/bmt/tc/tcList?pid='+pid;\r\n");
      out.write("\t\t\t\t\t} else if (pageNm == 'issueList') {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = '/bmt/issue/issueList?pid='+pid;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = '/bmt/projectMain?pid='+pid;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, setRotate: function(percent) {\r\n");
      out.write("\t\t\t\tvar retVal = 0;\r\n");
      out.write("\t\t\t\t// 1% ~ 50% 사이에서는 (해당% * 3.6deg) 스타일 적용\r\n");
      out.write("\t\t\t\t// 50% ~ 100% 사이에서는 (100%-해당%) * -3.6deg 스타일 적용 , grape 태그에 over 클래스 추가\r\n");
      out.write("\t\t\t\tif (percent>0 && percent<=50) {\r\n");
      out.write("\t\t\t\t\tretVal = (percent*3.6);\r\n");
      out.write("\t\t\t\t} else if (percent>50 && percent<=100) {\r\n");
      out.write("\t\t\t\t\tretVal = (100-percent)*-3.6;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn retVal+\"deg\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, setAppList: function(list) {\r\n");
      out.write("\t\t\t\tthis.appList = list;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getFavImg: function(idx) {\r\n");
      out.write("\t\t\t\tif (this.getFavoriteList[idx].fileNm)\r\n");
      out.write("\t\t\t\t\treturn \"/file/download?savePath=\" + this.getFavoriteList[idx].filePath + \"&saveName=\" + this.getFavoriteList[idx].fileNm + \"&realName=\" + this.getFavoriteList[idx].orgFileNm;\r\n");
      out.write("\t\t\t\telse\r\n");
      out.write("\t\t\t\t\treturn this.getFavoriteList[idx].orgFileNm;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, delUserWidgetPrc: function(widgetId) {\r\n");
      out.write("\t\t\t\tif (mainView.userWidgetList.length == 1) {\r\n");
      out.write("\t\t\t\t\talert(\"위젯을 모두 삭제 할 수 없습니다.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (confirm(\"위젯을 삭제하시겠습니까?\")){\r\n");
      out.write("\t\t\t\t\t$.post('/bot/user/delUserWidgetPrc', {widgetId:widgetId}, function(data) {\r\n");
      out.write("\t\t\t\t\t\tif (data.save) {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"삭제되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\tmainView.getUserWidgetList();\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"삭제에 실패하였습니다.\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getUserWidgetList: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/bot/user/getUserWidgetList\", function(data){\r\n");
      out.write("\t\t\t\t\tmainView.widCalendar = {};\r\n");
      out.write("\t\t\t\t\tmainView.widProject = {};\r\n");
      out.write("\t\t\t\t\tmainView.widStats = {};\r\n");
      out.write("\t\t\t\t\tmainView.widQaCalendar = {};\r\n");
      out.write("\t\t\t\t\tmainView.widQaProject = {};\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmainView.userWidgetList = data.userWidgetList;\r\n");
      out.write("\t\t\t\t\tdata.userWidgetList.forEach(function(e){\r\n");
      out.write("\t\t\t\t\t\tif (e.widgetId == \"WJ001\") { // 캘린더\r\n");
      out.write("\t\t\t\t\t\t\tmainView.widCalendar = e;\r\n");
      out.write("\t\t\t\t\t\t\tmainView.updateCal = true;\r\n");
      out.write("\t\t\t\t\t\t} else if (e.widgetId == \"WJ002\") { // 진행현황\r\n");
      out.write("\t\t\t\t\t\t\tmainView.widProject = e;\r\n");
      out.write("\t\t\t\t\t\t\tmainView.projectStatusList = [];\r\n");
      out.write("\t\t\t\t\t\t\tmainView.getProjectStatusList();\r\n");
      out.write("\t\t\t\t\t\t} else if(e.widgetId == \"WJ003\") { // Favorite Reports\r\n");
      out.write("\t\t\t\t\t\t\tmainView.widStats = e;\r\n");
      out.write("\t\t\t\t\t\t\tmainView.getFavoritesReportList();\r\n");
      out.write("\t\t\t\t\t\t} else if(e.widgetId == \"WJ004\") { // QA 캘린더\r\n");
      out.write("\t\t\t\t\t\t\tmainView.widQaCalendar = e;\r\n");
      out.write("\t\t\t\t\t\t\tmainView.updateQaCal = true;\r\n");
      out.write("\t\t\t\t\t\t} else if (e.widgetId == \"WJ005\") { // QA 진행현황\r\n");
      out.write("\t\t\t\t\t\t\tmainView.widQaProject = e;\r\n");
      out.write("\t\t\t\t\t\t\tmainView.qaProjectStatusList = [];\r\n");
      out.write("\t\t\t\t\t\t\tmainView.getQaProjectStatusList();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getFavoritesReportList: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/stats/report/getFavoritesReportList\", function(data){\r\n");
      out.write("\t\t\t\t\tmainView.favoritesReportList = data.favoritesReportList;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getQaProjectStatusList: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/qa/project/getProjectStatusList\", function(data){\r\n");
      out.write("\t\t\t\t\tdata.projectStatusList.forEach(function(o){\r\n");
      out.write("\t\t\t\t\t\tmainView.qaProjectStatusList.push(o);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getProjectStatusList: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/bmt/project/getProjectStatusList\", function(data){\r\n");
      out.write("\t\t\t\t\tdata.projectStatusList.forEach(function(o){\r\n");
      out.write("\t\t\t\t\t\tif (!(o.testCnt == 0 && o.issueCnt == 0)) {\r\n");
      out.write("\t\t\t\t\t\t\tmainView.projectStatusList.push(o);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getBgImg: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/bot/user/getWallpaperView\",function(data){\r\n");
      out.write("\t\t\t\t\tmainView.wallpaperView = data.wallpaperView;\r\n");
      out.write("\t\t\t\t\tif (mainView.wallpaperView != null && mainView.wallpaperView.wallpaperFileNm != \"\"){\r\n");
      out.write("\t\t\t\t\t\tthis.img = \"/file/download?savePath=\" + mainView.wallpaperView.filePath + \"&saveName=\" + mainView.wallpaperView.wallpaperFileNm + \"&realName=\" + mainView.wallpaperView.orgFileNm;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tthis.img = '/images/bot/bg_main.png';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t$(\".main_cnt\").attr(\"style\", \"background-image:url('\" + this.img +\"')\");\r\n");
      out.write("\t\t\t\t\t$('.main_cnt').css('min-height', $(window).height() - 54)\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getQaCalendarView: function() {\r\n");
      out.write("\t\t\t\tthis.updateQaCal = false;\r\n");
      out.write("\t\t\t\t$('#qaCalendar').fullCalendar({\r\n");
      out.write("\t\t\t\t\tcustomButtons: {\r\n");
      out.write("\t\t\t\t\t\tfullButton:{\r\n");
      out.write("\t\t\t\t\t\t\ttext: '크게보기',\r\n");
      out.write("\t\t\t\t\t\t\tclick: function(){\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.href = \"/qa/fullCalendar\"\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, header: {\r\n");
      out.write("\t\t\t\t\t\tleft: 'prev,next',\r\n");
      out.write("\t\t\t\t\t\tcenter: 'title',\r\n");
      out.write("\t\t\t\t\t\tright: 'today fullButton'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, locale: 'ko'\r\n");
      out.write("\t\t\t\t\t, height: 650\r\n");
      out.write("\t\t\t\t\t, editable: false\r\n");
      out.write("\t\t\t\t\t, navLinks: false\r\n");
      out.write("\t\t\t\t\t, eventLimit: true\r\n");
      out.write("\t\t\t\t\t, eventLimitText: '더보기'\r\n");
      out.write("\t\t\t\t\t, googleCalendarApiKey: 'AIzaSyD54ma_Q0Tcnu-N6y978iiD8IA4QIk0phg'\r\n");
      out.write("\t\t\t\t\t, events: function(start, end, timezone, callback) {\r\n");
      out.write("\t\t\t\t\t\t$.get(\"/qa/project/getMyProjectChasuList\", function(data){\r\n");
      out.write("\t\t\t\t\t\t\tif (!isEmpty(data)) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar events = [];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar _color = [\"#58c9b9\",\"#548687\",\"#4f86c6\",\"#aacd6e\",\"#1ec0ff\",\"#aaabd3\",\"#ff7473\",\"#ee6e9f\",\"#f3a632\",\"#c24f5d\"];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar projectColor = new Map();\r\n");
      out.write("\t\t\t\t\t\t\t\t$(data.myProjectList).each(function(i,e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar color = '';\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (projectColor.has(e.pid)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolor = projectColor.get(e.pid);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolor = _color[cnt];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tprojectColor.set(e.pid, color);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (cnt == _color.length-1) cnt = 0\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\telse cnt = cnt+1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tevents.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle: e.projectNm+\"-\"+e.hstChasu+\"차 (\"+e.chasuStDtm.substring(5,10)+\"~\"+e.chasuEdDtm.substring(5,10)+\")\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, start: e.chasuStDtm\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, end: e.chasuEdDtm\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, color: color\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, url: '/qa/projectMain?pid='+e.pid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tcallback(events);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, eventSources: [\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tgoogleCalendarId : \"ko.south_korea#holiday@group.v.calendar.google.com\"\r\n");
      out.write("\t\t\t\t\t\t\t, color : \"#FFFFFF\"\r\n");
      out.write("\t\t\t\t\t\t\t, textColor : \"#DF0101\"\r\n");
      out.write("\t\t\t\t\t\t\t, className: \"googleCalendar\"\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getCalendarView: function() {\r\n");
      out.write("\t\t\t\tthis.updateCal = false;\r\n");
      out.write("\t\t\t\t$('#calendar').fullCalendar({\r\n");
      out.write("\t\t\t\t\tcustomButtons: {\r\n");
      out.write("\t\t\t\t\t\tfullButton:{\r\n");
      out.write("\t\t\t\t\t\t\ttext: '크게보기',\r\n");
      out.write("\t\t\t\t\t\t\tclick: function(){\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.href = \"/bmt/fullCalendar\"\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, header: {\r\n");
      out.write("\t\t\t\t\t\tleft: 'prev,next',\r\n");
      out.write("\t\t\t\t\t\tcenter: 'title',\r\n");
      out.write("\t\t\t\t\t\tright: 'today fullButton'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, locale: 'ko'\r\n");
      out.write("\t\t\t\t\t, height: 650\r\n");
      out.write("\t\t\t\t\t, editable: false\r\n");
      out.write("\t\t\t\t\t, navLinks: false\r\n");
      out.write("\t\t\t\t\t, eventLimit: true\r\n");
      out.write("\t\t\t\t\t, eventLimitText: '더보기'\r\n");
      out.write("\t\t\t\t\t, googleCalendarApiKey: 'AIzaSyD54ma_Q0Tcnu-N6y978iiD8IA4QIk0phg'\r\n");
      out.write("\t\t\t\t\t, events: function(start, end, timezone, callback) {\r\n");
      out.write("\t\t\t\t\t\t$.get(\"/bmt/project/getMyProjectChasuList\", function(data){\r\n");
      out.write("\t\t\t\t\t\t\tif (!isEmpty(data)) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar events = [];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar icnt = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar _color = [\"#58c9b9\",\"#548687\",\"#4f86c6\",\"#aacd6e\",\"#1ec0ff\",\"#aaabd3\",\"#ff7473\",\"#ee6e9f\",\"#f3a632\",\"#c24f5d\"];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar projectColor = new Map();\r\n");
      out.write("\t\t\t\t\t\t\t\t$(data.myProjectList).each(function(i,e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar color = '';\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (projectColor.has(e.pid)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolor = projectColor.get(e.pid);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolor = _color[cnt];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tprojectColor.set(e.pid, color);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (cnt == _color.length-1) cnt = 0\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\telse cnt = cnt+1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tevents.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle: e.projectNm+\"-\"+e.chasu+\"차 (\"+e.chasuStDtm.substring(5,10)+\"~\"+e.chasuEdDtm.substring(5,10)+\")\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, start: e.chasuStDtm\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, end: e.chasuEdDtm\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, color: color\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t, url: '/bmt/projectMain?pid='+e.pid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tcallback(events);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, eventSources : [\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tgoogleCalendarId : \"ko.south_korea#holiday@group.v.calendar.google.com\"\r\n");
      out.write("\t\t\t\t\t\t\t, color : \"#FFFFFF\"\r\n");
      out.write("\t\t\t\t\t\t\t, textColor : \"#DF0101\"\r\n");
      out.write("\t\t\t\t\t\t\t, className: \"googleCalendar\"\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t]\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/bot/main.jsp(182,14) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("C300");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/bot/main.jsp(200,26) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appListJsonStr}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }
}
