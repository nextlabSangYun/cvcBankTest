/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-11-22 02:14:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hded.tc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tcResultAddForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"pop_wrap win_pop layout2\" id=\"vueApp\">\r\n");
      out.write("\t<div class=\"pop_tit\">\r\n");
      out.write("\t\t<p>Test Case 정보</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"clear\">\r\n");
      out.write("\t\t<div class=\"pop_cont fl\">\r\n");
      out.write("\t\t\t<p class=\"info_tit\">결과자료</p>\r\n");
      out.write("\t\t\t<div class=\"g_table tc_list\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:15%\">\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:15%\">\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:15%\">\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:15%\">\r\n");
      out.write("\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>시스템</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>중분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>소분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>T.C명</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{projectTcView.systemNm}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{projectTcView.lcateNm}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{projectTcView.mcateNm}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{projectTcView.scateNm}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><span v-html=\"projectTcView.tcNm\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"g_table02\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:120px;\">\r\n");
      out.write("\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>결과<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-if=\"prjVo.projectStat != 'C304'\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<select v-model=\"projectTcView.lastResultCd\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\">- 전체 -</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option v-for=\"list in getTestResultMenuList\" :value=\"list.codeId\">{{list.codeNm}}</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-else>\r\n");
      out.write("\t\t\t\t\t\t\t\t{{projectTcView.lastResultCd}}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>검수자 의견<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-if=\"prjVo.projectStat != 'C304'\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" class=\"full\" v-model=\"projectTcView.inspectorOpinion\" placeholder=\"검수자 의견을 입력해주세요.\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-else>\r\n");
      out.write("\t\t\t\t\t\t\t\t{{projectTcView.inspectorOpinion}}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>결과 자료</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-if=\"prjVo.projectStat != 'C304'\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<textarea class=\"full\" cols=\"30\" rows=\"5\" v-model=\"projectTcView.tcResultText\" placeholder=\"결과자료 (텍스트)를 입력해주세요.\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-else>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"txt\" v-html=\"projectTcView.projectCompleteTcResultText\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>파일첨부</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-if=\"prjVo.projectStat != 'C304'\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"note\">최대 10MB까지 첨부 가능합니다</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"file\" class=\"ir\" id=\"file\" name=\"file\" @change=\"regFile\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"file\" class=\"sch_file\">파일찾기</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"file_list\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li v-for=\"(fl, index) in fileList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a @click=\"getFileDown(fl)\">{{fl.orgFileNm}}</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button class=\"del\" @click=\"delFile(index)\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-else>\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"file_list\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li v-for=\"(fl, index) in fileList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a @click=\"getFileDown(fl)\">{{fl.orgFileNm}}</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button class=\"del\" @click=\"delFile(index)\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_proc\" @click=\"addResultTc\">등록</button>\r\n");
      out.write("\t\t\t\t<button class=\"btn_cancel\" onclick=\"window.close(); return false\">닫기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"pop_cont fr\">\r\n");
      out.write("\t\t\t<p class=\"info_tit\">결과이력</p>\r\n");
      out.write("\t\t\t<div class=\"tc_scroll\">\r\n");
      out.write("\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t<p>조회결과 : {{projectTcResultView.length | number(0)}}건</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn_down\" @click=\"getExcelDown\"><span>다운로드</span></button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<col style=\"width:7%\">\r\n");
      out.write("\t\t\t\t\t\t\t<col style=\"width:15%\">\r\n");
      out.write("\t\t\t\t\t\t\t<col style=\"width:7%\">\r\n");
      out.write("\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t<col style=\"width:8%\">\r\n");
      out.write("\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>등록일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>검수자의견</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>결과자료</th>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr v-if=\"pagingList.length==0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"5\">결과 이력이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr v-for=\"(list, index) in pagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{list.chasu}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{list.regDtm | dateTimeFormat}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td v-if=\"list.tcResultCd==='B301'\"class=\"pass\">PASS</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td v-if=\"list.tcResultCd==='B302'\"class=\"fail\">FAIL</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td v-if=\"list.tcResultCd===''\"class=\"unopen\">미입력</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{list.inspectorOpinion}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><button class=\"smbtn_view\" @click=\"resultData(list.tcResultSeq)\"></button></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t<paginator ref=\"resultPaginator\" :go-fn=\"getTcResultPagingList\" :init-rows=\"50\"></paginator>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var vueApp = new Vue({\r\n");
      out.write("\tel : '#vueApp',\r\n");
      out.write("\tdata : {\r\n");
      out.write("\t\tprojectTcView : {}\r\n");
      out.write("\t\t, fileDown:\"#\"\r\n");
      out.write("\t\t, fileList: []\r\n");
      out.write("\t\t, pagingList: []\r\n");
      out.write("\t\t, projectTcResultView:[]\r\n");
      out.write("\t\t, pid : '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, projectTcSeq: '");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, testResultNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, testResultNmList: []\r\n");
      out.write("\t\t, testResultFilter: ['B301', 'B302']\r\n");
      out.write("\t\t, criteriaExcel:{}\r\n");
      out.write("\t\t, criteria:{}\r\n");
      out.write("\t\t, prjVo:{\r\n");
      out.write("\t\t\tprojectStat: '");
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t}\r\n");
      out.write("\t},\r\n");
      out.write("\tmounted : function() {\r\n");
      out.write("\t\tsetPopup(2);\r\n");
      out.write("\t\tthis.testResultNmList = JSON.parse(decodeURIComponent(this.testResultNm));\r\n");
      out.write("\t\tthis.getProjectTc();\r\n");
      out.write("\t},\r\n");
      out.write("\tupdated : function() {\r\n");
      out.write("\t\tsetPopup(2);\r\n");
      out.write("\t},\r\n");
      out.write("\tmethods : {\r\n");
      out.write("\t\tgetProjectTc: function(){\r\n");
      out.write("\t\t\t$.post('/hded/tc/getProjectTc?projectTcSeq='+ this.projectTcSeq, function(data){\r\n");
      out.write("\t\t\t\tvueApp.projectTcView = data.projectTcView;\r\n");
      out.write("\t\t\t\tvueApp.projectTcView.tcNm = vueApp.projectTcView.tcNm.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\tvueApp.projectTcView.tcNm.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\tif(isEmpty(vueApp.projectTcView.lastResultCd)){\r\n");
      out.write("\t\t\t\t\tvueApp.projectTcView.lastResultCd=\"\";\r\n");
      out.write("\t\t\t\t\tvueApp.projectTcView.inspectorOpinion=\"\";\r\n");
      out.write("\t\t\t\t\tvueApp.projectTcView.tcResultText=\"\";\r\n");
      out.write("\t\t\t\t\tvueApp.fileList = [];\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(!isEmpty(data.projectTcView.tcResultText)){\r\n");
      out.write("\t\t\t\t\tvueApp.projectTcView.projectCompleteTcResultText = data.projectTcView.tcResultText.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\tvar tcResultTextStr = '<p>';\r\n");
      out.write("\t\t\t\t\ttcResultTextStr += vueApp.projectTcView.projectCompleteTcResultText.split('\\n').join('</p><p>');\t\r\n");
      out.write("\t\t\t\t\ttcResultTextStr += '</p>';\r\n");
      out.write("\t\t\t\t\tvueApp.projectCompleteTcResultText.tcResultText = tcResultTextStr;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tvueApp.fileList = vueApp.projectTcView.heTcResultFile;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tthis.getTcResult(this.projectTcSeq);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, getTcResult: function(projectTcSeq){\r\n");
      out.write("\t\t\t$.post('/hded/tc/getProjectTcResult?projectTcSeq='+ this.projectTcSeq, function(data){\r\n");
      out.write("\t\t\t\tvueApp.projectTcResultView = data.projectTcResultView;\r\n");
      out.write("\t\t\t\tvueApp.getTcResultPagingList();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tthis.criteriaExcel = $.extend(true, {}, this.criteria);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, getTcResultPagingList: function(){\r\n");
      out.write("\t\t\tthis.pagingList = this.$refs.resultPaginator.pagingList(vueApp.projectTcResultView);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, regFile: function() {\r\n");
      out.write("\t\t\tif(vueApp.fileList.length == 4){\r\n");
      out.write("\t\t\t\talert(\"첨부파일을 더이상 추가하실수 없습니다.\")\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfileUpload($(\"#file\"), {saveFilePath: \"hded/tcReport\"}, function(data) {\r\n");
      out.write("\t\t\t\tif (data.saveFileNm) {\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar f = {\r\n");
      out.write("\t\t\t\t\t\t\tfileNm: data.saveFileNm\r\n");
      out.write("\t\t\t\t\t\t\t, orgFileNm: data.realFileNm\r\n");
      out.write("\t\t\t\t\t\t\t, filePath: data.saveFilePath\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tvueApp.fileList.push(f);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, delFile: function(index) {\r\n");
      out.write("\t\t\tthis.fileList.splice(index, 1);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, getFileDown: function(f) {\r\n");
      out.write("\t\t\tfileDown(f.filePath, f.fileNm, f.orgFileNm);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, addResultTc: function(){\r\n");
      out.write("\t\t\tthis.projectTcView.heTcResultFile = this.fileList;\r\n");
      out.write("\t\t\tif(this.projectTcView.lastResultCd == ''){\r\n");
      out.write("\t\t\t\talert(\"결과를 선택해 주세요.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(this.projectTcView.inspectorOpinion == ''){\r\n");
      out.write("\t\t\t\talert(\"검수자 의견을 입력해 주세요.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"post\"\r\n");
      out.write("\t\t\t\t, url : \"/hded/tc/regResult\"\r\n");
      out.write("\t\t\t\t, contentType: \"application/json\"\r\n");
      out.write("\t\t\t\t, data : JSON.stringify(this.projectTcView)\r\n");
      out.write("\t\t\t\t, beforeSend: function() { \r\n");
      out.write("\t\t\t\t\tparent.startLoading();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, success: function(data) {\r\n");
      out.write("\t\t\t\t\tif (data.save) {\r\n");
      out.write("\t\t\t\t\t\talert(\"테스트 결과 입력이 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\twindow.opener.location.reload();\r\n");
      out.write("\t\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t\t} else if (data.message) {\r\n");
      out.write("\t\t\t\t\t\talert(data.message);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, error: function(xhr, status, error) {\r\n");
      out.write("\t\t\t\t\talert($(xhr.responseText).text());\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, complete : function() {\r\n");
      out.write("\t\t\t\t\tparent.endLoading();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, resultData: function(tcResultSeq){\r\n");
      out.write("\t\t\tgoShowPopupLayer('/hded/tc/tcResultDataForm?pid='+this.pid+'&tcResultSeq='+tcResultSeq);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, getExcelDown: function(){\r\n");
      out.write("\t\t\tvueApp.criteriaExcel.projectTcSeq = this.projectTcSeq;\r\n");
      out.write("\t\t\texcelFileDown(\"/hded/tc/getTcResultExcel\", vueApp.criteriaExcel);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}, \r\n");
      out.write("\tcomputed: {\r\n");
      out.write("\t\tgetTestResultMenuList: function() {\r\n");
      out.write("\t\t\tvar testResultFilter = this.testResultFilter;\r\n");
      out.write("\t\t\treturn this.testResultNmList.filter(function(testResultMenu) {\r\n");
      out.write("\t\t\t\treturn testResultFilter.some(function(m) {\r\n");
      out.write("\t\t\t\t\treturn testResultMenu.codeId === m;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}).sort(function(a,b) {\r\n");
      out.write("\t\t\t\treturn a.menuOrder - b.menuOrder;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/hded/tc/tcResultAddForm.jsp(166,11) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/views/hded/tc/tcResultAddForm.jsp(167,19) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.projectTcSeq}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/hded/tc/tcResultAddForm.jsp(168,19) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("B300");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/views/hded/tc/tcResultAddForm.jsp(174,17) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${heProjectVo.projectStat}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }
}
