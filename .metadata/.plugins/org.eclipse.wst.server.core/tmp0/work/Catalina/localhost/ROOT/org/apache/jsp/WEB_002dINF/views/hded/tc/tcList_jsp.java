/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-11-19 05:18:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hded.tc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tcList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"content\"  id=\"list\">\r\n");
      out.write("\t<div class=\"sub_layout has_snb tc_list_wrap\">\r\n");
      out.write("\t\t<div class=\"cont_wrap\">\r\n");
      out.write("\t\t\t<div class=\"sort_area\">\r\n");
      out.write("\t\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t\t<span class=\"sort_tit\">분류</span>\r\n");
      out.write("\t\t\t\t\t<div class=\"column3\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" v-model=\"criteria.lcateNm\" placeholder=\"대분류를 입력하세요.\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" v-model=\"criteria.mcateNm\" placeholder=\"중분류를 입력하세요.\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" v-model=\"criteria.scateNm\" placeholder=\"소분류를 입력하세요.\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t\t<span class=\"sort_tit\">테스트 결과</span>\r\n");
      out.write("\t\t\t\t\t<select v-model=\"criteria.lastResultCd\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"\">- 전체 -</option>\r\n");
      out.write("\t\t\t\t\t\t<option v-for=\"list in getTestResultMenuList\" :value=\"list.codeId\">{{list.codeNm}}</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"B305\">미입력</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t\t<span class=\"sort_tit\">T.C명</span>\t\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"full\" v-model=\"criteria.tcNm\" placeholder=\"Test Case 명을 입력하세요.\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<button class=\"btn_default\" @click=\"getProjectTcList\">조회</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t<p>조회결과 : {{projectTcList.length | number(0)}}건</p>\r\n");
      out.write("\t\t\t\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304' && authId == 'AU009'\" class=\"btn_down\" @click=\"goTcLargeAddForm\"><span>엑셀업로드</span></button>\r\n");
      out.write("\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_default\" @click=\"addIssue\">이슈 등록</button>\r\n");
      out.write("\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_default\" @click=\"addTc\">T.C 추가</button>\r\n");
      out.write("\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_cancel\" @click=\"delTc\"><span>T.C 삭제</span></button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<ul class=\"list_table\">\r\n");
      out.write("\t\t\t\t<li class=\"list_tr list_th\">\r\n");
      out.write("\t\t\t\t\t<p><input type=\"checkbox\" v-model=\"selectAll\"></p>\r\n");
      out.write("\t\t\t\t\t<p>대분류</p>\r\n");
      out.write("\t\t\t\t\t<p>중분류</p>\r\n");
      out.write("\t\t\t\t\t<p>소분류</p>\r\n");
      out.write("\t\t\t\t\t<p>T.C명</p>\r\n");
      out.write("\t\t\t\t\t<p>테스트 결과</p>\r\n");
      out.write("\t\t\t\t\t<p>결과자료</p>\r\n");
      out.write("\t\t\t\t\t<p></p>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li v-if=\"tcPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t<div class=\"list_tr\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"list_none\">조회된 데이터가 없습니다.</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li v-else v-for=\"(list, idx) in tcPagingList\">\r\n");
      out.write("\t\t\t\t\t<div class=\"list_tr accordion_link\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"nontarget\"><input type=\"checkbox\" name=\"tcCheck\" v-model=\"list.check\"></p>\r\n");
      out.write("\t\t\t\t\t\t<p>{{list.lcateNm}}</p>\r\n");
      out.write("\t\t\t\t\t\t<p>{{list.mcateNm}}</p>\r\n");
      out.write("\t\t\t\t\t\t<p>{{list.scateNm}}</p>\r\n");
      out.write("\t\t\t\t\t\t<p>{{list.abstractTcNm}}</p>\r\n");
      out.write("\t\t\t\t\t\t<p class=\"nontarget\">\r\n");
      out.write("\t\t\t\t\t\t\t<button v-if=\"list.lastResultCd === 'B301'\" class=\"smbtn_pass\" @click=\"testResult(list.projectTcSeq)\">PASS</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button v-if=\"list.lastResultCd === 'B302'\" class=\"smbtn_fail\" @click=\"testResult(list.projectTcSeq)\">FAIL</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button v-if=\"list.lastResultCd === 'B305'\" class=\"smbtn_none\" @click=\"testResult(list.projectTcSeq)\">미입력</button>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<p class=\"nontarget\"><button v-if=\"list.lastResultCd != 'B305'\" class=\"smbtn_view\" @click=\"resultData(list.tcResultSeq, list.lcateNm, list.mcateNm, list.scateNm, list.lastResultCd, list.tcNm)\"></button></p>\r\n");
      out.write("\t\t\t\t\t\t<p><img class=\"ico_arrow\" src=\"../../images/hded/arrow_right.png\" alt=\"arrow\"></p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"hidden_desc accordion_target\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"nontarget g_table05\">\r\n");
      out.write("\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t<caption></caption>\r\n");
      out.write("\t\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width: 150px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>T.C명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td><span v-html=\"list.tcNm\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>사전 환경</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>{{list.tcPreEnvir}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>테스트 입력 값</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td class='tb_break'>{{list.tcInputVal}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>예상 결과 값</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>{{list.tcOutputVal}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>정상판단기준</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>{{list.normalCriterion}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>사전 테스트 결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>{{list.beforeResultCd | code(resultCodeNm)}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>검수자 의견</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>{{list.inspectorOpinion}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<paginator ref=\"paginator\" :go-fn=\"getProjectTcPagingList\" :init-rows=\"50\"></paginator>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var list = new Vue({\r\n");
      out.write("\tel: '#list',\r\n");
      out.write("\tdata: {\r\n");
      out.write("\t\tcriteria:{\r\n");
      out.write("\t\t\tpid:'");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, systemId:'");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, sysSeq:'");
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, lcateNm:\"\"\r\n");
      out.write("\t\t\t, mcateNm:\"\"\r\n");
      out.write("\t\t\t, scateNm:\"\"\r\n");
      out.write("\t\t\t, tcNm:\"\"\r\n");
      out.write("\t\t\t, lastResultCd:\"\"\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, prjVo:{\r\n");
      out.write("\t\t\tprojectStat: '");
      if (_jspx_meth_c_005fout_005f3(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, projectTcList:[]\r\n");
      out.write("\t\t, tcPagingList:[]\r\n");
      out.write("\t\t, resultCodeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, importanceCodeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, tcDivisionCodeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f2(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, testResultNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f3(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t, testResultNmList: []\r\n");
      out.write("\t\t, testResultFilter: ['B301', 'B302']\r\n");
      out.write("\t\t, authId: '");
      if (_jspx_meth_c_005fout_005f4(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t}\r\n");
      out.write("\t, updated: function() {\r\n");
      out.write("\t\ttcListSection();\r\n");
      out.write("\t}\r\n");
      out.write("\t, beforeMount:function(){\r\n");
      out.write("\t\tthis.$nextTick(function() {\r\n");
      out.write("\t\t\tthis.testResultNmList = JSON.parse(decodeURIComponent(this.testResultNm));\r\n");
      out.write("\t\t\tthis.getProjectTcList();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t, mounted:function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t, methods:{\r\n");
      out.write("\t\tgetProjectTcList: function(){\r\n");
      out.write("\t\t\tcloseAccordionSection();\r\n");
      out.write("\t\t\tif(this.criteria.scateNm != ''){\r\n");
      out.write("\t\t\t\tif(this.criteria.mcateNm == ''){\r\n");
      out.write("\t\t\t\t\talert(\"중분류명을 입력해주세요\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tif(this.criteria.lcateNm == ''){\r\n");
      out.write("\t\t\t\t\t\talert(\"대분류명을 입력해주세요\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(this.criteria.mcateNm != ''){\r\n");
      out.write("\t\t\t\tif(this.criteria.lcateNm ==''){\r\n");
      out.write("\t\t\t\t\talert(\"대분류명을 입력해 주세요\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"post\"\r\n");
      out.write("\t\t\t\t, url : \"/hded/tc/getProjectTcList\"\r\n");
      out.write("\t\t\t\t, contentType: \"application/json\"\r\n");
      out.write("\t\t\t\t, data : JSON.stringify(list.criteria)\r\n");
      out.write("\t\t\t\t, success: function(data) {\r\n");
      out.write("\t\t\t\t\tlist.projectTcList = data.projectTcList;\r\n");
      out.write("\t\t\t\t\tlist.getProjectTcPagingList();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, error: function(xhr, status, error) {\r\n");
      out.write("\t\t\t\t\talert($(xhr.responseText).text());\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, getProjectTcPagingList: function() {\r\n");
      out.write("\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\ttempList = this.$refs.paginator.pagingList(this.projectTcList);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\ttempList[i].abstractTcNm = tempList[i].tcNm \r\n");
      out.write("\t\t\t\ttempList[i].tcNm = o.tcNm.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\ttempList[i].tcNm.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tthis.tcPagingList = tempList;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, goTcLargeAddForm : function() {\r\n");
      out.write("\t\t\tshowPopupLayer('/hded/tc/tcLargeAddForm?pid='+this.criteria.pid+'&systemId='+this.criteria.systemId+'&sysSeq='+this.criteria.sysSeq);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, addTc:function(){\r\n");
      out.write("\t\t\tvar pid = this.criteria.pid;\r\n");
      out.write("\t\t\tvar sysSeq = this.criteria.sysSeq;\r\n");
      out.write("\t\t\tvar systemId = this.criteria.systemId;\r\n");
      out.write("\t\t\tpopup('/hded/tc/tcAddForm?pid='+pid+'&sysSeq='+sysSeq+'&systemId='+systemId, 'Test Case 등록', 900, 500,'yes');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, delTc:function(){\r\n");
      out.write("\t\t\tvar param = [];\r\n");
      out.write("\t\t\tvar paramStr = '';\r\n");
      out.write("\t\t\tthis.projectTcList.forEach(function(tc) {\r\n");
      out.write("\t\t\t\tif (tc.check) {\r\n");
      out.write("\t\t\t\t\tfor(var i=0; i<list.projectTcList.length; i++){\r\n");
      out.write("\t\t\t\t\t\tif(tc.projectTcSeq === list.projectTcList[i].projectTcSeq){\r\n");
      out.write("\t\t\t\t\t\t\tparam.push(list.projectTcList[i].projectTcSeq);\r\n");
      out.write("\t\t\t\t\t\t\tparamStr += list.projectTcList[i].projectTcSeq + \";\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tif (param.length < 1) {\r\n");
      out.write("\t\t\t\talert(\"삭제할 T.C가 없습니다. \");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar cmsg = \"선택한 T.C를 삭제하시겠습니까?\";\r\n");
      out.write("\t\t\tif(confirm(cmsg)){\r\n");
      out.write("\t\t\t\t$.post('/hded/tc/delProjectTcPrc',{param:paramStr} , function(data){\r\n");
      out.write("\t\t\t\t\tif(data.del){\r\n");
      out.write("\t\t\t\t\t\t//리스트 초기화\r\n");
      out.write("\t\t\t\t\t\tlist.getProjectTcList();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, addIssue: function(){\r\n");
      out.write("\t\t\tvar parentChk = 1;\r\n");
      out.write("\t\t\tvar url = \"/hded/issue/issueForm?pid=\" + this.criteria.pid+ \"&parentChk=\"+parentChk+\"&sysSeq=\"+this.criteria.sysSeq;\r\n");
      out.write("\t\t\tgoShowPopupLayer(url);\r\n");
      out.write("\t\t\tlocation.href = \"#\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, testResult: function(projectTcSeq){\r\n");
      out.write("\t\t\tvar pid = this.criteria.pid;\r\n");
      out.write("\t\t\tpopup('/hded/tc/tcResultAddForm?pid='+pid+'&projectTcSeq='+projectTcSeq,\"테스트 결과 등록\",1350, 520, \"yes\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, resultData: function(tcResultSeq, lcateNm, mcateNm, scateNm, lastResultCd, tcNm){\r\n");
      out.write("\t\t\tgoShowPopupLayer('/hded/tc/tcListResultDataForm?pid='+this.criteria.pid+'&tcResultSeq='+tcResultSeq+'&lcateNm='+lcateNm+'&mcateNm='+mcateNm+'&scateNm='+scateNm+'&lastResultCd='+lastResultCd+'&tcNm='+tcNm);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, getChkTc: function(){\r\n");
      out.write("\t\t\tvar chkArray = []\r\n");
      out.write("\t\t\tthis.projectTcList.forEach(function(chk){\r\n");
      out.write("\t\t\t\tif(chk.check == true){\r\n");
      out.write("\t\t\t\t\tchkArray.push(chk.projectTcSeq);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\treturn chkArray;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t, computed: {\r\n");
      out.write("\t\tgetTestResultMenuList: function() {\r\n");
      out.write("\t\t\tvar testResultFilter = this.testResultFilter;\r\n");
      out.write("\t\t\treturn this.testResultNmList.filter(function(testResultMenu) {\r\n");
      out.write("\t\t\t\treturn testResultFilter.some(function(m) {\r\n");
      out.write("\t\t\t\t\treturn testResultMenu.codeId === m;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}).sort(function(a,b) {\r\n");
      out.write("\t\t\t\treturn a.menuOrder - b.menuOrder;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, selectAll: {\r\n");
      out.write("\t\t\tget: function () {\r\n");
      out.write("\t\t\t\tvar total = this.projectTcList.length;\r\n");
      out.write("\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\tthis.projectTcList.forEach(function(tc) {\r\n");
      out.write("\t\t\t\t\tif (tc.check) {\r\n");
      out.write("\t\t\t\t\t\tcnt++;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\treturn total == cnt && cnt > 0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, set: function (value) {\r\n");
      out.write("\t\t\t\t$('[name=\"tcCheck\"]').each(function() {\r\n");
      out.write("\t\t\t\t\t$(this).prop('checked', value);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.projectTcList.forEach(function(tc) {\r\n");
      out.write("\t\t\t\t\ttc.check = value;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(123,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${heProjectVo.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(124,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${heProjectVo.systemId}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(125,13) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${heProjectVo.sysSeq}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f3.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(133,17) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f3.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${heProjectVo.projectStat}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
    if (_jspx_th_c_005fout_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(137,19) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("B300");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f1 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f1.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f1.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(138,23) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f1.setCodeType("B100");
    int _jspx_eval_nl_005fcodeListJson_005f1 = _jspx_th_nl_005fcodeListJson_005f1.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f2 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f2.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f2.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(139,23) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f2.setCodeType("B900");
    int _jspx_eval_nl_005fcodeListJson_005f2 = _jspx_th_nl_005fcodeListJson_005f2.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f2);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f3 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f3.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f3.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(140,19) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f3.setCodeType("B300");
    int _jspx_eval_nl_005fcodeListJson_005f3 = _jspx_th_nl_005fcodeListJson_005f3.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f4.setParent(null);
    // /WEB-INF/views/hded/tc/tcList.jsp(143,13) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f4.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${authId}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
    if (_jspx_th_c_005fout_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
    return false;
  }
}
