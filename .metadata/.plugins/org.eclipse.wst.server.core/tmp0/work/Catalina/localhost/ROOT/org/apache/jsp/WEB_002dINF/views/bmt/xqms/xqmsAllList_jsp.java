/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-11-28 02:41:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.bmt.xqms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class xqmsAllList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"sub_layout\">\r\n");
      out.write("\t\t<div class=\"sort_area\">\r\n");
      out.write("\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit\">기간</span>\r\n");
      out.write("\t\t\t\t<div class=\"period\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"input_date\" name=\"startDt\" v-model=\"criteria.startDt\" readonly><span class=\"bar\">~</span><input type=\"text\" class=\"input_date\" name=\"endDt\" v-model=\"criteria.endDt\" readonly>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit\">프로젝트</span>\r\n");
      out.write("\t\t\t\t<div class=\"con_col2\">\r\n");
      out.write("\t\t\t\t\t<div class=\"sch_area sel2\">\r\n");
      out.write(" \t\t\t\t\t\t<project-select ref=\"projectSelect\" :change-fn=\"addProjectList\"></project-select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"reg_list\" v-if=\"projectList.length>0\">\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li v-for=\"(p, index) in projectList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>{{p.projectNm}}</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"del\" @click=\"delProjectList(index)\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit\">측정모델</span>\r\n");
      out.write("\t\t\t\t<div class=\"con_col2\">\r\n");
      out.write("\t\t\t\t\t<div class=\"sch_area sel2\">\r\n");
      out.write("\t\t\t\t\t\t<model-select ref=\"modelSelect\" :change-fn=\"addModelList\"></model-select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"reg_list\" v-if=\"modelList.length>0\">\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li v-for=\"(m, index) in modelList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>{{m.modelNm}}</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"del\" @click=\"delModelList(index)\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button class=\"g_btn01\" @click=\"btnSearch\">조회</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"tab_wrap\">\r\n");
      out.write("\t\t\t<ul class=\"g_tab\">\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getXqmsBmtList\">TESTCASE</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getXqmsChannelList\">채널변경시간</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getXqmsUiReactionList\">UI 반응시간</a></li>\r\n");
      out.write("\t\t\t\t<!--<li><a href=\"#\" @click=\"getXqmsLkfsList\">LKFS</a></li>\r\n");
      out.write("\t\t\t\t <li><a href=\"#\" @click=\"getXqmsRemoconRobotList\" >리모컨 로봇 테스트</a></li> -->\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<div class=\"tab_con_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ xqmsBmtList.length | number(0) }}건</p>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" class=\"g_btn04\" @click=\"btnExcelDown(event)\"><span>다운로드</span></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:15%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:13%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:12%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>대상 프로젝트</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>Test Case</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>Bot 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in bmtPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\">{{ list.projectNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }} ({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.botNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><span :class=\"{state01:list.bmtResult==='B302', state02:list.bmtResult==='B301' , state04:list.bmtResult==='B303' || list.bmtResult==='B304'}\">{{ list.bmtResult | code(codeNm) }}</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"xqmsBmtList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"8\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"bmtPaginator\" :go-fn=\"getBmtPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ xqmsChannelList.length | number(0) }}건 <span class=\"unit\">단위 : ms</span></p>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" class=\"g_btn04\" @click=\"btnExcelDown(event)\"><span>다운로드</span></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:15%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:15%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대상 프로젝트</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Bot 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th colspan=\"5\">측정결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>A구간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>B구간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>C구간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>총소요</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>네트워크</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in channelPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\">{{ list.projectNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }} ({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.botNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.remoconReactTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.firstStopTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.secondStopTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.totTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.ntwTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"channelPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"12\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"channelPaginator\" :go-fn=\"getChannelPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ xqmsUiReactionList.length | number(0) }}건 <span class=\"unit\">단위 : ms</span></p>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" class=\"g_btn04\" @click=\"btnExcelDown(event)\"><span>다운로드</span></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:15%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:13%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:12%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대상 프로젝트</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Bot 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th colspan=\"3\">측정결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>매칭</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>커서</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>변화율</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in uiReactionPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\">{{ list.projectNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }} ({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.botNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.matchTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.reactTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.diffTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"uiReactionPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"10\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"uiReactionPaginator\" :go-fn=\"getUiReactionPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- LKFS -->\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ xqmsLkfsList.length | number(0) }}건 <span class=\"unit\">단위 : lkfs</span></p>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"g_btn04\"><span>다운로드</span></button>\r\n");
      out.write("\t\t\t\t\t</div>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>츨정일시, 구분, Test Case 이름 등으로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:12%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7.5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대상 프로젝트</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Bot 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정 결과(I-lkfs)</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정결과 상세보기</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in lkfsPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\">{{ list.projectNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }}({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.botNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{list.lastILkfs | number(0)}}</td>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><button class=\"btn_show\"></button></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"10\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"lkfsPaginator\" :go-fn=\"getLkfsPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t<!-- 리모컨 로봇 테스트 -->\t\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ xqmsRemoconRobotList.length | number(0) }}건 <span class=\"unit\">단위 : ms</span></p>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"g_btn04\" @click=\"btnExcelDown\"><span>다운로드</span></button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:15%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:15%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대상 프로젝트</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Bot 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th colspan=\"4\">측정 결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정모델 요청</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정모델 이동</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>리모컨 요청</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>리모컨 이동</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in remoconRobotPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\">{{ list.projectNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }}({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.botNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.targetRepeat | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.resultRepeat | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.targetDaq | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.resultDaq | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"remoconRobotPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"12\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"remoconRobotPaginator\" :go-fn=\"getRemoconRobotPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar cont = new Vue({\r\n");
      out.write("\t\tel: '.content'\r\n");
      out.write("\t\t, data: {\r\n");
      out.write("\t\t\txqmsBmtList: []\r\n");
      out.write("\t\t\t, xqmsChannelList: []\r\n");
      out.write("\t\t\t, xqmsUiReactionList: []\r\n");
      out.write("\t\t\t, xqmsRemoconRobotList: []\r\n");
      out.write("\t\t\t, xqmsLkfsList: []\r\n");
      out.write("\t\t\t, bmtPagingList: []\r\n");
      out.write("\t\t\t, channelPagingList: []\r\n");
      out.write("\t\t\t, uiReactionPagingList: []\r\n");
      out.write("\t\t\t, remoconRobotPagingList: []\r\n");
      out.write("\t\t\t, lkfsPagingList: []\r\n");
      out.write("\t\t\t, codeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, criteria: {\r\n");
      out.write("\t\t\t\tstartDt: '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t\t, endDt: '");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t\t, modelIdArray: []\r\n");
      out.write("\t\t\t\t, pidArray: []\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, criteriaExcel: {}\r\n");
      out.write("\t\t\t, currTab: ''\r\n");
      out.write("\t\t\t, modelList: []\r\n");
      out.write("\t\t\t, projectList: []\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, mounted: function() {\r\n");
      out.write("\t\t\tthis.$nextTick(function() {\r\n");
      out.write("\t\t\t\tthis.getXqmsBmtList();\r\n");
      out.write("\t\t\t\t$('.input_date').on('change', function() {\r\n");
      out.write("\t\t\t\t\tcont[\"criteria\"][this.name] = $(this).val();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, methods: {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// Bmt\r\n");
      out.write("\t\t\tgetXqmsBmtList: function() {\r\n");
      out.write("\t\t\t\tif (cont.criteria.startDt > cont.criteria.endDt) {\r\n");
      out.write("\t\t\t\t\talert(\"시작일자와 종료일자를 확인해 주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcont.currTab = 'bmt'\r\n");
      out.write("\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t$.post(\"/bmt/xqms/getXqmsBmtList\", cont.criteria, function(data){\r\n");
      out.write("\t\t\t\t\tcont.xqmsBmtList = data.xqmsBmtList;\r\n");
      out.write("\t\t\t\t\tcont.getBmtPagingList();\r\n");
      out.write("\t\t\t\t\tcont.$refs.bmtPaginator.goPage(1);\r\n");
      out.write("\t\t\t\t\tcont.criteriaExcel = $.extend(true, {}, cont.criteria);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getBmtPagingList: function () {\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.bmtPaginator.pagingList(this.xqmsBmtList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.bmtPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// lkfs\r\n");
      out.write("\t\t\t, getXqmsLkfsList: function(){\r\n");
      out.write("\t\t\t\tif (cont.criteria.startDt > cont.criteria.endDt) {\r\n");
      out.write("\t\t\t\t\talert(\"시작일자와 종료일자를 확인해 주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcont.currTab = 'lkfs'\r\n");
      out.write("\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t$.post(\"/bmt/xqms/getXqmslkfsList\", cont.criteria, function(data){\r\n");
      out.write("\t\t\t\t\tcont.xqmsLkfsList = data.xqmsLkfsList;\r\n");
      out.write("\t\t\t\t\tcont.getLkfsPagingList();\r\n");
      out.write("\t\t\t\t\tcont.$refs.lkfsPaginator.goPage(1);\r\n");
      out.write("\t\t\t\t\tcont.criteriaExcel = $.extend(true, {}, cont.criteria);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getLkfsPagingList: function(){\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.lkfsPaginator.pagingList(this.projectXqmsLkfsList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.lkfsPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// remocon robot\r\n");
      out.write("\t\t\t, getXqmsRemoconRobotList: function(){\r\n");
      out.write("\t\t\t\tif (cont.criteria.startDt > cont.criteria.endDt) {\r\n");
      out.write("\t\t\t\t\talert(\"시작일자와 종료일자를 확인해 주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcont.currTab = 'remoconRobot'\r\n");
      out.write("\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t$.post(\"/bmt/xqms/getXqmsRemoconRobotList\", cont.criteria, function(data){\r\n");
      out.write("\t\t\t\t\tcont.xqmsRemoconRobotList = data.xqmsRemoconRobotList;\r\n");
      out.write("\t\t\t\t\tcont.getRemoconRobotPagingList();\r\n");
      out.write("\t\t\t\t\tcont.$refs.remoconRobotPaginator.goPage(1);\r\n");
      out.write("\t\t\t\t\tcont.criteriaExcel = $.extend(true, {}, cont.criteria);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getRemoconRobotPagingList: function(){\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.remoconRobotPaginator.pagingList(this.xqmsRemoconRobotList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.remoconRobotPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// Channel\r\n");
      out.write("\t\t\t, getXqmsChannelList: function() {\r\n");
      out.write("\t\t\t\tif (cont.criteria.startDt > cont.criteria.endDt) {\r\n");
      out.write("\t\t\t\t\talert(\"시작일자와 종료일자를 확인해 주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcont.currTab = 'channel'\r\n");
      out.write("\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t$.post(\"/bmt/xqms/getXqmsChannelList\", cont.criteria, function(data){\r\n");
      out.write("\t\t\t\t\tcont.xqmsChannelList = data.xqmsChannelList;\r\n");
      out.write("\t\t\t\t\tcont.getChannelPagingList();\r\n");
      out.write("\t\t\t\t\tcont.$refs.channelPaginator.goPage(1);\r\n");
      out.write("\t\t\t\t\tcont.criteriaExcel = $.extend(true, {}, cont.criteria);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getChannelPagingList: function () {\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.channelPaginator.pagingList(this.xqmsChannelList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.channelPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// UI Reaction\r\n");
      out.write("\t\t\t, getXqmsUiReactionList: function() {\r\n");
      out.write("\t\t\t\tif (cont.criteria.startDt > cont.criteria.endDt) {\r\n");
      out.write("\t\t\t\t\talert(\"시작일자와 종료일자를 확인해 주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcont.currTab = 'uiReaction'\r\n");
      out.write("\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t$.post(\"/bmt/xqms/getXqmsUiReactionList\", cont.criteria, function(data){\r\n");
      out.write("\t\t\t\t\tcont.xqmsUiReactionList = data.xqmsUiReactionList;\r\n");
      out.write("\t\t\t\t\tcont.getUiReactionPagingList();\r\n");
      out.write("\t\t\t\t\tcont.$refs.uiReactionPaginator.goPage(1);\r\n");
      out.write("\t\t\t\t\tcont.criteriaExcel = $.extend(true, {}, cont.criteria);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getUiReactionPagingList: function () {\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.uiReactionPaginator.pagingList(this.xqmsUiReactionList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.uiReactionPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 조회\r\n");
      out.write("\t\t\t, btnSearch: function() {\r\n");
      out.write("\t\t\t\tif (cont.currTab == 'bmt') {\r\n");
      out.write("\t\t\t\t\tthis.getXqmsBmtList();\r\n");
      out.write("\t\t\t\t} else if (cont.currTab == 'channel') {\r\n");
      out.write("\t\t\t\t\tthis.getXqmsChannelList();\r\n");
      out.write("\t\t\t\t} else if (cont.currTab == 'uiReaction') {\r\n");
      out.write("\t\t\t\t\tthis.getXqmsUiReactionList();\r\n");
      out.write("\t\t\t\t} else if (cont.currTab == 'remoconRobot'){\r\n");
      out.write("\t\t\t\t\tthis.getXqmsRemoconRobotList();\r\n");
      out.write("\t\t\t\t}else if (cont.currTab == 'lkfs'){\r\n");
      out.write("\t\t\t\t\tthis.getXqmsLkfsList();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 엑셀다운로드\r\n");
      out.write("\t\t\t, btnExcelDown: function(event) {\r\n");
      out.write("\t\t\t\tvar url = '';\r\n");
      out.write("\t\t\t\tif (cont.currTab == 'bmt') {\r\n");
      out.write("\t\t\t\t\turl = '/bmt/xqms/getXqmsBmtExcel';\r\n");
      out.write("\t\t\t\t} else if (cont.currTab == 'channel') {\r\n");
      out.write("\t\t\t\t\turl = '/bmt/xqms/getXqmsChannelExcel';\r\n");
      out.write("\t\t\t\t} else if (cont.currTab == 'uiReaction'){\r\n");
      out.write("\t\t\t\t\turl = '/bmt/xqms/getXqmsUiReactionExcel';\r\n");
      out.write("\t\t\t\t} else if (cont.currTab == 'remoconRobot'){\r\n");
      out.write("\t\t\t\t\turl = '/bmt/xqms/getXqmsRemoconRobotExcel';\r\n");
      out.write("\t\t\t\t}else if (cont.currTab == 'lkfs'){\r\n");
      out.write("\t\t\t\t\turl = '/bmt/xqms/getXqmsLkfsExcel';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\texcelFileDown(url, this.criteriaExcel);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 측정모델 검색조건\r\n");
      out.write("\t\t\t, addModelList: function(data) {\r\n");
      out.write("\t\t\t\tvar chk = this.criteria.modelIdArray.some(function(modelId) {\r\n");
      out.write("\t\t\t\t\treturn modelId == data.modelId;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (!chk) {\r\n");
      out.write("\t\t\t\t\tthis.modelList.push(data);\r\n");
      out.write("\t\t\t\t\tthis.criteria.modelIdArray.push(data.modelId);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"이미 추가된 측정모델입니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, delModelList: function(index) {\r\n");
      out.write("\t\t\t\tthis.modelList.splice(index, 1);\r\n");
      out.write("\t\t\t\tthis.criteria.modelIdArray.splice(index, 1);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//프로젝트 검색조건\r\n");
      out.write("\t\t\t, addProjectList: function(data) {\r\n");
      out.write("\t\t\t\tvar chk = this.criteria.pidArray.some(function(pid) {\r\n");
      out.write("\t\t\t\t\treturn pid == data.pid;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (!chk) {\r\n");
      out.write("\t\t\t\t\tthis.projectList.push(data);\r\n");
      out.write("\t\t\t\t\tthis.criteria.pidArray.push(data.pid);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"이미 추가된 프로젝트입니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, delProjectList: function(index) {\r\n");
      out.write("\t\t\t\tthis.projectList.splice(index, 1);\r\n");
      out.write("\t\t\t\tthis.criteria.pidArray.splice(index, 1);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsAllList.jsp(367,14) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("B300");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsAllList.jsp(369,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${startDt}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsAllList.jsp(370,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endDt}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }
}
