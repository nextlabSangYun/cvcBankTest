/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-11-28 02:41:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.bmt.xqms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class xqmsMngList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcheckboxes_0026_005fv_002dmodel_005fname_005fcodeType_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fselect_0026_005fv_002dmodel;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005foption_0026_005fvalue;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005foptions_0026_005fcodeType_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fnl_005fcheckboxes_0026_005fv_002dmodel_005fname_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fselect_0026_005fv_002dmodel = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005foption_0026_005fvalue = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005foptions_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fnl_005fcheckboxes_0026_005fv_002dmodel_005fname_005fcodeType_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fselect_0026_005fv_002dmodel.release();
    _005fjspx_005ftagPool_005fnl_005foption_0026_005fvalue.release();
    _005fjspx_005ftagPool_005fnl_005foptions_0026_005fcodeType_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"sub_layout has_snb\">\r\n");
      out.write("\t\t<div class=\"sort_area\">\r\n");
      out.write("\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit\">기간</span>\r\n");
      out.write("\t\t\t\t<div class=\"period\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"input_date\" name=\"startDt\" v-model=\"criteria.startDt\" readonly><span class=\"bar\">~</span><input type=\"text\" class=\"input_date\" id=\"endDt\" name=\"endDt\" v-model=\"criteria.endDt\" readonly >\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"sel_item\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit pad\">대분류</span>\r\n");
      out.write("\t\t\t\t<project-category-select :pid=\"criteria.pid\" level=\"1\" big-cate-select-text=\"선택\" :change-fn=\"setCateId\"></project-category-select>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"sel_item\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit pad\">중요도</span>\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_nl_005fcheckboxes_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t\t<div class=\"sel_item\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit pad\">결과</span>\r\n");
      out.write("\t\t\t\t");
      //  nl:select
      kr.co.nextlab.tag.CustomSelectTag _jspx_th_nl_005fselect_005f0 = (kr.co.nextlab.tag.CustomSelectTag) _005fjspx_005ftagPool_005fnl_005fselect_0026_005fv_002dmodel.get(kr.co.nextlab.tag.CustomSelectTag.class);
      _jspx_th_nl_005fselect_005f0.setPageContext(_jspx_page_context);
      _jspx_th_nl_005fselect_005f0.setParent(null);
      // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(23,4) null
      _jspx_th_nl_005fselect_005f0.setDynamicAttribute(null, "v-model", "criteria.bmtResult");
      int[] _jspx_push_body_count_nl_005fselect_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_nl_005fselect_005f0 = _jspx_th_nl_005fselect_005f0.doStartTag();
        if (_jspx_eval_nl_005fselect_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t");
            //  nl:option
            org.springframework.web.servlet.tags.form.OptionTag _jspx_th_nl_005foption_005f0 = (org.springframework.web.servlet.tags.form.OptionTag) _005fjspx_005ftagPool_005fnl_005foption_0026_005fvalue.get(org.springframework.web.servlet.tags.form.OptionTag.class);
            _jspx_th_nl_005foption_005f0.setPageContext(_jspx_page_context);
            _jspx_th_nl_005foption_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_nl_005fselect_005f0);
            // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(24,5) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_nl_005foption_005f0.setValue("");
            int[] _jspx_push_body_count_nl_005foption_005f0 = new int[] { 0 };
            try {
              int _jspx_eval_nl_005foption_005f0 = _jspx_th_nl_005foption_005f0.doStartTag();
              if (_jspx_eval_nl_005foption_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object value = null;
                java.lang.String displayValue = null;
                if (_jspx_eval_nl_005foption_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.pushBody();
                  _jspx_push_body_count_nl_005foption_005f0[0]++;
                  _jspx_th_nl_005foption_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
                  _jspx_th_nl_005foption_005f0.doInitBody();
                }
                value = (java.lang.Object) _jspx_page_context.findAttribute("value");
                displayValue = (java.lang.String) _jspx_page_context.findAttribute("displayValue");
                do {
                  out.write("- 전체 -");
                  int evalDoAfterBody = _jspx_th_nl_005foption_005f0.doAfterBody();
                  value = (java.lang.Object) _jspx_page_context.findAttribute("value");
                  displayValue = (java.lang.String) _jspx_page_context.findAttribute("displayValue");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_nl_005foption_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                  _jspx_push_body_count_nl_005foption_005f0[0]--;
                }
              }
              if (_jspx_th_nl_005foption_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } catch (java.lang.Throwable _jspx_exception) {
              while (_jspx_push_body_count_nl_005foption_005f0[0]-- > 0)
                out = _jspx_page_context.popBody();
              _jspx_th_nl_005foption_005f0.doCatch(_jspx_exception);
            } finally {
              _jspx_th_nl_005foption_005f0.doFinally();
              _005fjspx_005ftagPool_005fnl_005foption_0026_005fvalue.reuse(_jspx_th_nl_005foption_005f0);
            }
            out.write("\r\n");
            out.write("\t\t\t\t\t");
            if (_jspx_meth_nl_005foptions_005f0(_jspx_th_nl_005fselect_005f0, _jspx_page_context, _jspx_push_body_count_nl_005fselect_005f0))
              return;
            out.write("\r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_nl_005fselect_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_nl_005fselect_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_nl_005fselect_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_nl_005fselect_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_nl_005fselect_005f0.doFinally();
        _005fjspx_005ftagPool_005fnl_005fselect_0026_005fv_002dmodel.reuse(_jspx_th_nl_005fselect_005f0);
      }
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"sel_item full\">\r\n");
      out.write("\t\t\t\t<span class=\"sort_tit\">측정모델</span>\t\r\n");
      out.write("\t\t\t\t<div class=\"sel_model\">\r\n");
      out.write("\t\t\t\t\t<project-model-select ref=\"modelSelect\" :change-fn=\"addModelList\" :pid=\"criteria.pid\"></project-model-select>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"reg_list\" v-if=\"modelList.length > 0\">\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li v-for=\"(list, index) in modelList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>{{list.modelNm}}({{list.modelVer}})</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"del\" @click=\"delModelList(index)\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button class=\"g_btn01\" @click=\"btnSearch\">조회</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"tab_wrap\">\r\n");
      out.write("\t\t\t<ul class=\"g_tab\">\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getProjectXqmsMngBmtList\">TESTCASE</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getProjectXqmsMngChannelList\">채널변경시간</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getProjectXqmsMngUiReactionList\" >UI 반응시간</a></li>\r\n");
      out.write("\t\t\t\t<!-- <li><a href=\"#\" @click=\"getProjectXqmsMngLkfsList\">LKFS</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" @click=\"getProjectXqmsMngRemoconRobotList\" >리모컨 로봇 테스트</a></li> -->\t\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<div class=\"tab_con_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ projectXqmsMngBmtList.length | number(0) }}건 </p>\t\t\r\n");
      out.write("\t\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"g_btn03\" @click=\"selectDelete\">선택삭제</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>츨정일시, 구분, Test Case 이름 등으로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:9%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:3.5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:12%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7.5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th><input type=\"checkbox\" v-model=\"selectBmtAll\"></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>중요도</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정 결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>수정</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"(list,index) in bmtPagingList \" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"checkbox\" v-model=\"selectXqmsSeq.xqmsSeqArray\" :value=\"list.xqmsSeq\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm}}({{list.modelVer}})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.importance | code(importanceCodeNm) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.bigCateNm}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }} </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person}} </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><span :class=\"{state01:list.bmtResult==='B302', state02:list.bmtResult==='B301' , state04:list.bmtResult==='B303' || list.bmtResult==='B304'}\">{{ list.bmtResult | code(resultCodeNm) }}</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><a v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_edit\" @click=\"goShowPopupLayer('/bmt/xqms/xqmsMngForm?xqmsSeq=' + list.xqmsSeq + '&xqmsType=' + list.xqmsType + '&pid=' + criteria.pid); return false;\"></a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"bmtPagingList.length == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"11\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"bmtPaginator\" :go-fn=\"getBmtPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ projectXqmsMngChannelList.length | number(0) }}건<span class=\"unit\">단위 : ms</span></p>\t\r\n");
      out.write("\t\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"g_btn03\" @click=\"selectDelete\">선택삭제</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:3.5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\"><input type=\"checkbox\" v-model=\"selectChannelAll\"></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">중요도</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th colspan=\"7\">측정 결과</th>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>A구간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>B구간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>C구간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>총소요</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>네트워크</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>수정</th>\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in channelPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"checkbox\" v-model=\"selectXqmsSeq.xqmsSeqArray\" :value=\"list.xqmsSeq\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }}({{list.modelVer}})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.importance | code(importanceCodeNm) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.bigCateNm}}</td>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.remoconReactTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.firstStopTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.secondStopTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.totTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.ntwTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><span :class=\"{state01:list.channelResult==='B302' , state02:list.channelResult==='B301' , state04:list.channelResult==='B303' || list.channelResult==='B304'}\">{{ list.channelResult | code(resultCodeNm) }}</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><a v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_edit\" @click=\"goShowPopupLayer('/bmt/xqms/xqmsMngForm?xqmsSeq=' + list.xqmsSeq + '&xqmsType=' + list.xqmsType + '&pid=' + criteria.pid); return false;\"></a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"channelPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"16\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"channelPaginator\" :go-fn=\"getChannelPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ projectXqmsMngUiReactionList.length | number(0) }}건<span class=\"unit\">단위 : ms</span></p>\r\n");
      out.write("\t\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"g_btn03\" @click=\"selectDelete\">선택삭제</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:3.5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\"><input type=\"checkbox\" v-model=\"selectUiReactionAll\"></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">중요도</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th colspan=\"5\">측정 결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>매칭</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>커서</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>변화율</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>수정</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in uiReactionPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"checkbox\" v-model=\"selectXqmsSeq.xqmsSeqArray\" :value=\"list.xqmsSeq\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }}({{list.modelVer}})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.importance | code(importanceCodeNm) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.bigCateNm}}</td>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.matchTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.reactTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.diffTime | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><span :class=\"{state01:list.coldResetResult==='B302', state02:list.coldResetResult==='B301' , state04:list.coldResetResult==='B303' || list.coldResetResult==='B304'}\">{{ list.coldResetResult | code(resultCodeNm) }}</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><a v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_edit\" @click=\"goShowPopupLayer('/bmt/xqms/xqmsMngForm?xqmsSeq=' + list.xqmsSeq + '&xqmsType=' + list.xqmsType + '&pid=' + criteria.pid); return false;\"></a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"uiReactionPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"14\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"uiReactionPaginator\" :go-fn=\"getUiReactionPagingList\" ></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- LKFS -->\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ projectXqmsMngLkfsList.length | number(0) }}건<span class=\"unit\">단위 : lkfs</span></p>\r\n");
      out.write("\t\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"g_btn03\" @click=\"selectDelete\">선택삭제</button>\r\n");
      out.write("\t\t\t\t\t</div>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>츨정일시, 구분, Test Case 이름 등으로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:10%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5.5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\"><input type=\"checkbox\" v-model=\"selectLkfsAll\"></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">중요도</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정 결과<br>(I-lkfs)</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정결과 상세보기</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">수정</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in lkfsPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"checkbox\" v-model=\"selectXqmsSeq.xqmsSeqArray\" :value=\"list.xqmsSeq\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }}({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.importance | code(importanceCodeNm) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.bigCateNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{list.lastILkfs}}</td>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><button class=\"btn_show\"></button></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><a v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_edit\" @click=\"goShowPopupLayer('/bmt/xqms/xqmsMngForm?xqmsSeq=' + list.xqmsSeq + '&xqmsType=' + list.xqmsType + '&pid=' + criteria.pid); return false;\"></a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"lkfsPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"12\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"lkfsPaginator\" :go-fn=\"getLkfsPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t<div class=\"tab_con\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tb_desc\">\r\n");
      out.write("\t\t\t\t\t\t<p>조회결과 : {{ projectXqmsMngRemoconRobotList.length | number(0) }}건 <span class=\"unit\">단위 : ms</span></p>\r\n");
      out.write("\t\t\t\t\t\t<button v-if=\"prjVo.projectStat != 'C304'\" class=\"g_btn03\" @click=\"selectDelete\">선택삭제</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t<caption>대상 프로젝트, 측정일시, 측정모델 등 정보로 구성된 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:5%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:4%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:8%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:7%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:12%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<col style=\"width:6%;\">\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\"><input type=\"checkbox\" v-model=\"selectRemoconRobotAll\"></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">Test Case 이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">중요도</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">리모컨</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">담당자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th rowspan=\"2\">측정일시</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th colspan=\"6\">측정 결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정모델 요청</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>측정모델 이동</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>리모컨 요청</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>리모컨 이동</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>수정</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-for=\"list in remoconRobotPagingList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"checkbox\" v-model=\"selectXqmsSeq.xqmsSeqArray\" :value=\"list.xqmsSeq\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"l_align\"><span v-html=\"list.testcase\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.modelNm }}({{ list.modelVer }})</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.importance | code(importanceCodeNm) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.bigCateNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.prjChasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.remocon }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.person }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>{{ list.xqmsDtm | dateTimeFormat }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.targetRepeat | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.resultRepeat | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.targetDaq | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"r_align\">{{ list.resultDaq | number(0) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><span :class=\"{state01:list.repeatResult==='B302', state02:list.repeatResult==='B301' , state04:list.repeatResult==='B303' || list.repeatResult==='B304'}\">{{ list.repeatResult | code(resultCodeNm) }}</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><a v-if=\"prjVo.projectStat != 'C304'\" class=\"btn_edit\" @click=\"goShowPopupLayer('/bmt/xqms/xqmsMngForm?xqmsSeq=' + list.xqmsSeq + '&xqmsType=' + list.xqmsType + '&pid=' + criteria.pid); return false;\"></a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr v-if=\"remoconRobotPagingList == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"15\">조회된 데이터가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<paginator ref=\"remoconRobotPaginator\" :go-fn=\"getRemoconRobotPagingList\"></paginator>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar xqmsMng = new Vue({\r\n");
      out.write("\t\tel: '.content'\r\n");
      out.write("\t\t, data: {\r\n");
      out.write("\t\t\tprojectXqmsMngBmtList: []\r\n");
      out.write("\t\t\t, projectXqmsMngChannelList: []\r\n");
      out.write("\t\t\t, projectXqmsMngUiReactionList: []\r\n");
      out.write("\t\t\t, projectXqmsMngRemoconRobotList: []\r\n");
      out.write("\t\t\t, projectXqmsMngLkfsList: []\r\n");
      out.write("\t\t\t, bmtPagingList: []\r\n");
      out.write("\t\t\t, channelPagingList: []\r\n");
      out.write("\t\t\t, uiReactionPagingList: []\t\r\n");
      out.write("\t\t\t, remoconRobotPagingList: []\r\n");
      out.write("\t\t\t, lkfsPagingList: []\r\n");
      out.write("\t\t\t, importanceCodeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, resultCodeNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f1(_jspx_page_context))
        return;
      out.write("'\t\r\n");
      out.write("\t\t\t, criteria: {\r\n");
      out.write("\t\t\t\tstartDt: '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t\t, endDt: '");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t\t, importanceArray: []\r\n");
      out.write("\t\t\t\t, modelSeqArray: []\r\n");
      out.write("\t\t\t\t, pidArray: ['");
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("']\r\n");
      out.write("\t\t\t\t, pid: '");
      if (_jspx_meth_c_005fout_005f3(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t\t, bigCateId: ''\t\r\n");
      out.write("\t\t\t\t, bmtResult: ''\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, modelList: []\r\n");
      out.write("\t\t\t, chkBox: false\r\n");
      out.write("\t\t\t, searchChk: true\r\n");
      out.write("\t\t\t, selectXqmsSeq: {\r\n");
      out.write("\t\t\t\txqmsSeqArray: []\r\n");
      out.write("\t\t\t\t, seqArray: []\r\n");
      out.write("\t\t\t\t, pid: '");
      if (_jspx_meth_c_005fout_005f4(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, currTab: 'bmt'\r\n");
      out.write("\t\t\t, prjVo:{\r\n");
      out.write("\t\t\t\tprojectStat: '");
      if (_jspx_meth_c_005fout_005f5(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, mounted: function(){\r\n");
      out.write("\t\t\tthis.$nextTick(function(){\r\n");
      out.write("\t\t\t\tthis.getProjectXqmsMngBmtList();\r\n");
      out.write("\t\t\t\t$('.input_date').on('change', function() {\r\n");
      out.write("\t\t\t\t\txqmsMng[\"criteria\"][this.name] = $(this).val();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, computed: {\r\n");
      out.write("\t\t\t// chkBoxAll\r\n");
      out.write("\t\t\tselectBmtAll: {\r\n");
      out.write("\t\t\t\tget: function(){\r\n");
      out.write("\t\t\t\t\tif (this.bmtPagingList.length == 0){\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (this.selectXqmsSeq.xqmsSeqArray.length > 0) {\r\n");
      out.write("\t\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\t\tthis.bmtPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tvar chk = xqmsMng.selectXqmsSeq.xqmsSeqArray.some(function(xqmsSeq){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(xqmsSeq == list.xqmsSeq) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\treturn this.bmtPagingList ? this.selectXqmsSeq.xqmsSeqArray.length == this.bmtPagingList.length : false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, set: function(value) {\r\n");
      out.write("\t\t\t\t\tvar bmtXqmsSeqArray = [];\r\n");
      out.write("\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\tif (value){\r\n");
      out.write("\t\t\t\t\t\tthis.bmtPagingList.forEach(function (list){\r\n");
      out.write("\t\t\t\t\t\t\tbmtXqmsSeqArray.push(list.xqmsSeq);\r\n");
      out.write("\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = bmtXqmsSeqArray;\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, selectChannelAll: {\r\n");
      out.write("\t\t\t\tget: function(){\r\n");
      out.write("\t\t\t\t\tif (this.channelPagingList.length == 0){\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (this.selectXqmsSeq.xqmsSeqArray.length > 0) {\r\n");
      out.write("\t\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\t\tthis.channelPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tvar chk = xqmsMng.selectXqmsSeq.xqmsSeqArray.some(function(xqmsSeq){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(xqmsSeq == list.xqmsSeq) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treturn this.channelPagingList ? this.selectXqmsSeq.xqmsSeqArray.length == this.channelPagingList.length : false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, set: function(value) {\r\n");
      out.write("\t\t\t\t\tvar channelSeqArray = [];\r\n");
      out.write("\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\tif (value){\r\n");
      out.write("\t\t\t\t\t\tthis.channelPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tchannelSeqArray.push(list.xqmsSeq);\r\n");
      out.write("\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = channelSeqArray;\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, selectUiReactionAll: {\r\n");
      out.write("\t\t\t\tget: function(){\r\n");
      out.write("\t\t\t\t\tif (this.uiReactionPagingList.length == 0){\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (this.selectXqmsSeq.xqmsSeqArray.length > 0) {\r\n");
      out.write("\t\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\t\tthis.uiReactionPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tvar chk = xqmsMng.selectXqmsSeq.xqmsSeqArray.some(function(xqmsSeq){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(xqmsSeq == list.xqmsSeq) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treturn this.uiReactionPagingList ? this.selectXqmsSeq.xqmsSeqArray.length == this.uiReactionPagingList.length : false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, set: function(value) {\r\n");
      out.write("\t\t\t\t\tvar uiReactionSeqArray = [];\r\n");
      out.write("\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\tif (value){\r\n");
      out.write("\t\t\t\t\t\tthis.uiReactionPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tuiReactionSeqArray.push(list.xqmsSeq);\r\n");
      out.write("\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = uiReactionSeqArray;\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, selectRemoconRobotAll: {\r\n");
      out.write("\t\t\t\tget: function(){\r\n");
      out.write("\t\t\t\t\tif (this.remoconRobotPagingList.length == 0){\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (this.selectXqmsSeq.xqmsSeqArray.length > 0) {\r\n");
      out.write("\t\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\t\tthis.remoconRobotPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tvar chk = xqmsMng.selectXqmsSeq.xqmsSeqArray.some(function(xqmsSeq){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(xqmsSeq == list.xqmsSeq) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treturn this.remoconRobotPagingList ? this.selectXqmsSeq.xqmsSeqArray.length == this.remoconRobotPagingList.length : false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, set: function(value) {\r\n");
      out.write("\t\t\t\t\tvar remoconRobotSeqArray = [];\r\n");
      out.write("\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\tif (value){\r\n");
      out.write("\t\t\t\t\t\tthis.remoconRobotPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tremoconRobotSeqArray.push(list.xqmsSeq);\r\n");
      out.write("\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = remoconRobotSeqArray;\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, selectLkfsAll: {\r\n");
      out.write("\t\t\t\tget: function(){\r\n");
      out.write("\t\t\t\t\tif (this.lkfsPagingList.length == 0){\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (this.selectXqmsSeq.xqmsSeqArray.length > 0) {\r\n");
      out.write("\t\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\t\tthis.lkfsPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tvar chk = xqmsMng.selectXqmsSeq.xqmsSeqArray.some(function(xqmsSeq){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(xqmsSeq == list.xqmsSeq) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treturn this.lkfsPagingList ? this.selectXqmsSeq.xqmsSeqArray.length == this.lkfsPagingList.length : false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, set: function(value) {\r\n");
      out.write("\t\t\t\t\tvar lkfsSeqArray = [];\r\n");
      out.write("\t\t\t\t\tvar seqArray = [];\r\n");
      out.write("\t\t\t\t\tif (value){\r\n");
      out.write("\t\t\t\t\t\tthis.lkfsPagingList.forEach(function(list){\r\n");
      out.write("\t\t\t\t\t\t\tlkfsSeqArray.push(list.xqmsSeq);\r\n");
      out.write("\t\t\t\t\t\t\tseqArray.push(list.seq);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = lkfsSeqArray;\r\n");
      out.write("\t\t\t\t\txqmsMng.selectXqmsSeq.seqArray = seqArray;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t\t, methods: {\r\n");
      out.write("\t\t\t// bmt\r\n");
      out.write("\t\t\tgetProjectXqmsMngBmtList: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.searchChk){\r\n");
      out.write("\t\t\t\t\txqmsMng.currTab = 'bmt'\r\n");
      out.write("\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t$.post(\"/bmt/xqms/getProjectXqmsBmtList\", xqmsMng.criteria, function(data){\r\n");
      out.write("\t\t\t\t\t\txqmsMng.projectXqmsMngBmtList = data.projectXqmsBmtList;\r\n");
      out.write("\t\t\t\t\t\txqmsMng.getBmtPagingList();\r\n");
      out.write("\t\t\t\t\t\txqmsMng.$refs.bmtPaginator.goPage(xqmsMng.$refs.bmtPaginator.page);\r\n");
      out.write("\t\t\t\t\t});\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getBmtPagingList: function(){\r\n");
      out.write("\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.bmtPaginator.pagingList(this.projectXqmsMngBmtList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.bmtPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//lkfs\r\n");
      out.write("\t\t\t, getProjectXqmsMngLkfsList: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.searchChk){\r\n");
      out.write("\t\t\t\t\txqmsMng.currTab = \"lkfs\";\r\n");
      out.write("\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\t\r\n");
      out.write("\t\t\t\t\t$.post(\"/bmt/xqms/getProjectXqmsLkfsList\", xqmsMng.criteria,function(data){\r\n");
      out.write("\t\t\t\t\t\txqmsMng.projectXqmsMngLkfsList = data.projectXqmsLkfsList;\r\n");
      out.write("\t\t\t\t\t\txqmsMng.getLkfsPagingList();\r\n");
      out.write("\t\t\t\t\t\txqmsMng.$refs.lkfsPaginator.goPage(xqmsMng.$refs.lkfsPaginator.page);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getLkfsPagingList: function(){\r\n");
      out.write("\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.lkfsPaginator.pagingList(this.projectXqmsMngLkfsList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.lkfsPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//리모콘 로봇 테스트\r\n");
      out.write("\t\t\t, getProjectXqmsMngRemoconRobotList: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.searchChk){\r\n");
      out.write("\t\t\t\t\txqmsMng.currTab = \"remoconRobot\";\r\n");
      out.write("\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\t\r\n");
      out.write("\t\t\t\t\t$.post(\"/bmt/xqms/getProjectXqmsRemoconRobotList\", xqmsMng.criteria,function(data){\r\n");
      out.write("\t\t\t\t\t\txqmsMng.projectXqmsMngRemoconRobotList = data.projectXqmsRemoconRobotList;\r\n");
      out.write("\t\t\t\t\t\txqmsMng.getRemoconRobotPagingList();\r\n");
      out.write("\t\t\t\t\t\txqmsMng.$refs.remoconRobotPaginator.goPage(xqmsMng.$refs.remoconRobotPaginator.page);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getRemoconRobotPagingList: function(){\r\n");
      out.write("\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.remoconRobotPaginator.pagingList(this.projectXqmsMngRemoconRobotList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.remoconRobotPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// Channel \r\n");
      out.write("\t\t\t, getProjectXqmsMngChannelList: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.searchChk){\r\n");
      out.write("\t\t\t\t\txqmsMng.currTab = \"channel\"\r\n");
      out.write("\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\t\t\r\n");
      out.write("\t\t\t\t\t$.post(\"/bmt/xqms/getProjectXqmsChannelList\", xqmsMng.criteria, function(data){\r\n");
      out.write("\t\t\t\t\t\txqmsMng.projectXqmsMngChannelList = data.projectXqmsChannelList;\r\n");
      out.write("\t\t\t\t\t\txqmsMng.getChannelPagingList();\r\n");
      out.write("\t\t\t\t\t\txqmsMng.$refs.channelPaginator.goPage(xqmsMng.$refs.channelPaginator.page);\r\n");
      out.write("\t\t\t\t\t});\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getChannelPagingList: function(){\r\n");
      out.write("\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.channelPaginator.pagingList(this.projectXqmsMngChannelList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.channelPagingList = tempList;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// UiReaction\r\n");
      out.write("\t\t\t, getProjectXqmsMngUiReactionList: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.searchChk){\r\n");
      out.write("\t\t\t\t\txqmsMng.currTab = \"uiReacion\"\r\n");
      out.write("\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t$.post(\"/bmt/xqms/getProjectXqmsUiReactionList\", xqmsMng.criteria, function(data){\r\n");
      out.write("\t\t\t\t\t\txqmsMng.projectXqmsMngUiReactionList = data.projectXqmsUiReactionList;\r\n");
      out.write("\t\t\t\t\t\txqmsMng.getUiReactionPagingList();\r\n");
      out.write("\t\t\t\t\t\txqmsMng.$refs.uiReactionPaginator.goPage(xqmsMng.$refs.uiReactionPaginator.page);\r\n");
      out.write("\t\t\t\t\t});\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getUiReactionPagingList: function(){\r\n");
      out.write("\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\tvar tempList = [];\r\n");
      out.write("\t\t\t\ttempList = this.$refs.uiReactionPaginator.pagingList(this.projectXqmsMngUiReactionList);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttempList.forEach(function(o,i){\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase = o.testcase.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\ttempList[i].testcase.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.uiReactionPagingList = tempList;\r\n");
      out.write("\t\t\t}\t\r\n");
      out.write("\t\t\t, selectDelete: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.currTab == \"bmt\"){\r\n");
      out.write("\t\t\t\t\tif(xqmsMng.projectXqmsMngBmtList.length > 0 && xqmsMng.selectXqmsSeq.xqmsSeqArray.length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar cmsg = \"선택한 측정이력 결과를 삭제 하시겠습니까?\";\r\n");
      out.write("\t\t\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t\t\t$.post(\"/bmt/xqms/delXqmsMngBmtPrc\", xqmsMng.selectXqmsSeq, function(data){\r\n");
      out.write("\t\t\t\t\t\t\t\tif (data.del){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"삭제가 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparent.xqmsMng.getProjectXqmsMngBmtList();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\talert(\"선택된 측정이력이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if (xqmsMng.currTab == \"channel\"){\r\n");
      out.write("\t\t\t\t\tif(xqmsMng.projectXqmsMngChannelList.length > 0 && xqmsMng.selectXqmsSeq.xqmsSeqArray.length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar cmsg = \"선택한 측정이력 결과를 삭제 하시겠습니까?\";\r\n");
      out.write("\t\t\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t\t\t$.post(\"/bmt/xqms/delXqmsMngChannelPrc\", xqmsMng.selectXqmsSeq, function(data){\r\n");
      out.write("\t\t\t\t\t\t\t\tif (data.del){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"삭제가 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparent.xqmsMng.getProjectXqmsMngChannelList();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\talert(\"선택된 측정이력이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if (xqmsMng.currTab == \"uiReacion\") {\r\n");
      out.write("\t\t\t\t\tif(xqmsMng.projectXqmsMngUiReactionList.length > 0 && xqmsMng.selectXqmsSeq.xqmsSeqArray.length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar cmsg = \"선택한 측정이력 결과를 삭제 하시겠습니까?\";\r\n");
      out.write("\t\t\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t\t\t$.post(\"/bmt/xqms/delXqmsMngUiReactionPrc\", xqmsMng.selectXqmsSeq, function(data){\r\n");
      out.write("\t\t\t\t\t\t\t\tif (data.del){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"삭제가 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparent.xqmsMng.getProjectXqmsMngUiReactionList();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\talert(\"선택된 측정이력이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if(xqmsMng.currTab == \"remoconRobot\"){\r\n");
      out.write("\t\t\t\t\tif(xqmsMng.projectXqmsMngRemoconRobotList.length > 0 && xqmsMng.selectXqmsSeq.xqmsSeqArray.length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar cmsg = \"선택한 측정이력 결과를 삭제 하시겠습니까?\";\r\n");
      out.write("\t\t\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t\t\t$.post(\"/bmt/xqms/delXqmsMngRemoconRobotPrc\", xqmsMng.selectXqmsSeq, function(data){\r\n");
      out.write("\t\t\t\t\t\t\t\tif (data.del){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"삭제가 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparent.xqmsMng.getProjectXqmsMngRemoconRobotList();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\talert(\"선택된 측정이력이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if(xqmsMng.currTab == \"lkfs\"){\r\n");
      out.write("\t\t\t\t\tif(xqmsMng.projectXqmsMngLkfsList.length > 0 && xqmsMng.selectXqmsSeq.xqmsSeqArray.length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar cmsg = \"선택한 측정이력 결과를 삭제 하시겠습니까?\";\r\n");
      out.write("\t\t\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t\t\tjQuery.ajaxSettings.traditional = true;\r\n");
      out.write("\t\t\t\t\t\t\t$.post(\"/bmt/xqms/delXqmsMngLkfsPrc\", xqmsMng.selectXqmsSeq, function(data){\r\n");
      out.write("\t\t\t\t\t\t\t\tif (data.del){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"삭제가 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\txqmsMng.selectXqmsSeq.xqmsSeqArray = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparent.xqmsMng.getProjectXqmsMngLkfsList();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\talert(\"선택된 측정이력이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t, changeTab: function(currTab){\r\n");
      out.write("\t\t\t\txqmsMng.currTab = currTab;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 검색조회\r\n");
      out.write("\t\t\t, btnSearch: function(){\r\n");
      out.write("\t\t\t\tif (xqmsMng.criteria.startDt > xqmsMng.criteria.endDt){\r\n");
      out.write("\t\t\t\t\talert(\"시작일자와 종료일자를 확인해주세요.\");\r\n");
      out.write("\t\t\t\t\txqmsMng.searchChk = false;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\txqmsMng.searchChk = true;\r\n");
      out.write("\t\t\t\t\tif (xqmsMng.currTab == 'bmt'){\r\n");
      out.write("\t\t\t\t\t\tthis.getProjectXqmsMngBmtList();\r\n");
      out.write("\t\t\t\t\t} else if (xqmsMng.currTab == 'channel'){\r\n");
      out.write("\t\t\t\t\t\tthis.getProjectXqmsMngChannelList();\r\n");
      out.write("\t\t\t\t\t} else if(xqmsMng.currTab == \"uiReacion\"){\r\n");
      out.write("\t\t\t\t\t\tthis.getProjectXqmsMngUiReactionList();\r\n");
      out.write("\t\t\t\t\t} else if(xqmsMng.currTab == \"remoconRobot\"){\r\n");
      out.write("\t\t\t\t\t\tthis.getProjectXqmsMngRemoconRobotList();\r\n");
      out.write("\t\t\t\t\t} else if(xqmsMng.currTab == \"lkfs\"){\r\n");
      out.write("\t\t\t\t\t\tthis.getProjectXqmsMngLkfsList();\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t// 측정모델 검색조건\r\n");
      out.write("\t\t\t, addModelList: function(data){\r\n");
      out.write("\t\t\t\tvar chk = true;\r\n");
      out.write("\t\t\t\tvar modelSeqArray = xqmsMng.criteria.modelSeqArray;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tfor (var i=0; i < modelSeqArray.length; i++) {\r\n");
      out.write("\t\t\t\t\tif (modelSeqArray[i] == data.modelSeq) {\r\n");
      out.write("\t\t\t\t\t\tchk = false;\r\n");
      out.write("\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t\tif (chk) {\r\n");
      out.write("\t\t\t\t\tthis.modelList.push(data);\r\n");
      out.write("\t\t\t\t\tthis.criteria.modelSeqArray.push(data.modelSeq);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"이미 추가된 측정모델입니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, delModelList: function(index){\r\n");
      out.write("\t\t\t\tthis.modelList.splice(index,1);\r\n");
      out.write("\t\t\t\tthis.criteria.modelSeqArray.splice(index, 1);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, setCateId: function(obj) {\r\n");
      out.write("\t\t\t\tthis.criteria.bigCateId = obj.bigCateId;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_nl_005fcheckboxes_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:checkboxes
    kr.co.nextlab.tag.CustomCheckboxesTag _jspx_th_nl_005fcheckboxes_005f0 = (kr.co.nextlab.tag.CustomCheckboxesTag) _005fjspx_005ftagPool_005fnl_005fcheckboxes_0026_005fv_002dmodel_005fname_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CustomCheckboxesTag.class);
    _jspx_th_nl_005fcheckboxes_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcheckboxes_005f0.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(19,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcheckboxes_005f0.setName("importance");
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(19,4) null
    _jspx_th_nl_005fcheckboxes_005f0.setDynamicAttribute(null, "v-model", "criteria.importanceArray");
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(19,4) name = codeType type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcheckboxes_005f0.setCodeType("B100");
    int[] _jspx_push_body_count_nl_005fcheckboxes_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_nl_005fcheckboxes_005f0 = _jspx_th_nl_005fcheckboxes_005f0.doStartTag();
      if (_jspx_th_nl_005fcheckboxes_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_nl_005fcheckboxes_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_nl_005fcheckboxes_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_nl_005fcheckboxes_005f0.doFinally();
      _005fjspx_005ftagPool_005fnl_005fcheckboxes_0026_005fv_002dmodel_005fname_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcheckboxes_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_nl_005foptions_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_nl_005fselect_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_nl_005fselect_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:options
    kr.co.nextlab.tag.CustomOptionsTag _jspx_th_nl_005foptions_005f0 = (kr.co.nextlab.tag.CustomOptionsTag) _005fjspx_005ftagPool_005fnl_005foptions_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CustomOptionsTag.class);
    _jspx_th_nl_005foptions_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005foptions_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_nl_005fselect_005f0);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(25,5) name = codeType type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005foptions_005f0.setCodeType("B300");
    int[] _jspx_push_body_count_nl_005foptions_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_nl_005foptions_005f0 = _jspx_th_nl_005foptions_005f0.doStartTag();
      if (_jspx_th_nl_005foptions_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_nl_005foptions_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_nl_005foptions_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_nl_005foptions_005f0.doFinally();
      _005fjspx_005ftagPool_005fnl_005foptions_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005foptions_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(413,24) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("B100");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f1 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f1.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f1.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(414,20) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f1.setCodeType("B300");
    int _jspx_eval_nl_005fcodeListJson_005f1 = _jspx_th_nl_005fcodeListJson_005f1.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(416,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${startDt}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(417,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endDt}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(420,18) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f3.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(421,12) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f3.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
    if (_jspx_th_c_005fout_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f4.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(431,12) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f4.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
    if (_jspx_th_c_005fout_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f5 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f5.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f5.setParent(null);
    // /WEB-INF/views/bmt/xqms/xqmsMngList.jsp(435,18) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f5.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectView.projectStat}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f5 = _jspx_th_c_005fout_005f5.doStartTag();
    if (_jspx_th_c_005fout_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
    return false;
  }
}
