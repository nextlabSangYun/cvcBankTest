/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-07-26 06:04:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.qa;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class projectMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"/css/kendo.common-material.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/css/kendo.material.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/kendo.all.min.js\"></script>\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"sub_layout has_snb\">\r\n");
      out.write("\t\t<div class=\"cont_wrap\">\r\n");
      out.write("\t\t\t<p class=\"cate_tit\"></p>\r\n");
      out.write("\t\t\t<div class=\"g_table04\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<caption>기간, 현재상태, 참여인력 등을 확인할 수 있는 표 입니다.</caption>\r\n");
      out.write("\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:170px;\">\r\n");
      out.write("\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:170px;\">\r\n");
      out.write("\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>프로젝트명</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{ projectView.projectNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<th>프로젝트 태그</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{ projectView.tcPrefix }}</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>기간</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{ projectView.projectStDt }} ~ {{ projectView.projectEndDt }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<th>M/M (예상/투입)</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-if=\"projectView.projectStatCd == 'C304'\">QA : {{ projectView.predictionQaMm }} / {{ projectView.projectQaMm }} | BP : {{ projectView.predictionBpMm }} / {{ projectView.projectBpMm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td v-else>QA : {{ projectView.predictionQaMm }} | BP : {{ projectView.predictionBpMm }}</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>차수</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\" v-if=\"projectView.chasuStat == 'Y' || projectView.projectStatCd == 'C304'\">{{ projectView.chasu }}차</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\" v-else>{{ projectView.chasu }}차 (수정개발)</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>현재상태</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\">{{ projectView.projectStatCd | code(projectStatNm) }}</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>검증결과</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\" v-if=\"projectView.projectResultCd != null\">{{projectView.projectResultCd | code(codeListD100)}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\" v-else>미평가</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button v-for=\"(list, index) in projectModelList\" class=\"tb_btn02_home\" @click=\"goShowPopupLayer('/qa/project/projectModelHstList?modelSeq='+list.modelSeq); return false;\">{{ list.modelNm }}({{ list.modelVer }})</button>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>참여인력</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"g_table inner\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th>그룹명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th>참여자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr v-for=\"(list, index) in projectPartiList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>{{ list.userGroupNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>{{ list.userNm }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>비고</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"3\">{{ projectView.bigo }}</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"btm_con con_col2\">\r\n");
      out.write("\t\t\t\t<div class=\"l_cont\">\r\n");
      out.write("\t\t\t\t\t<p class=\"cate_tit\">TESTCASE 진행현황 (총 {{ tcChartList.tcTotalCnt | number(0) }}건)</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"prj_sch_chart\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"chartPointer\" id=\"tcChart\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"r_cont\">\r\n");
      out.write("\t\t\t\t\t<p class=\"cate_tit\">결함 관리현황</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"flaw_chart\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"item\" id=\"flawChartDiv\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"javascript://\" @click=\"goFlawList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div :class=\"['st_grape', 'red', flawChartList.flawPercent==100 ? 'full' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div :class=\"['grape', flawChartList.flawPercent>50 ? 'over' : '']\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"bar\" :style=\"{transform:'rotate('+setRotate(flawChartList.flawPercent)+')'}\" v-if =\"flawChartList.flawPercent>0\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"per_wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"per\">{{ flawChartList.flawPercent }}<span>%</span></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"num\">({{ flawChartList.testFlawCnt }}/{{ flawChartList.testFailCnt }})</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"tit\">결함정보 관리현황</p>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar cont = new Vue({\r\n");
      out.write("\t\tel: '.content'\r\n");
      out.write("\t\t, data: {\r\n");
      out.write("\t\t\tpid: '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, projectView: {}\r\n");
      out.write("\t\t\t, projectPartiList: []\r\n");
      out.write("\t\t\t, projectModelList: []\r\n");
      out.write("\t\t\t, projectStatNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, codeListD100: '");
      if (_jspx_meth_nl_005fcodeListJson_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, tcChartList: {\r\n");
      out.write("\t\t\t\ttcTotalCnt: 0\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, flawChartList: {\r\n");
      out.write("\t\t\t\ttestFailCnt: 0\r\n");
      out.write("\t\t\t\t, testFlawCnt: 0\r\n");
      out.write("\t\t\t\t, flawPercent: 0\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, mounted: function() {\r\n");
      out.write("\t\t\tthis.$nextTick(function() {\r\n");
      out.write("\t\t\t\tthis.getProjectView();\r\n");
      out.write("\t\t\t\tthis.getTcChart();\r\n");
      out.write("\t\t\t\tthis.getFlawChart();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, methods: {\r\n");
      out.write("\t\t\tgetProjectView: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/qa/project/getProjectEditInfoView?pid=\"+cont.pid, function(data){\r\n");
      out.write("\t\t\t\t\tcont.projectView = data.projectView;\r\n");
      out.write("\t\t\t\t\tcont.projectPartiList = data.projectPartiList;\r\n");
      out.write("\t\t\t\t\tcont.projectModelList = data.projectModelList;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getTcChart: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/qa/project/getTcChartList?pid=\"+cont.pid, function(data){\r\n");
      out.write("\t\t\t\t\tcont.tcChartList = data.tcChartList;\r\n");
      out.write("\t\t\t\t\tcont.getTcChartView();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getTcChartView: function(){\r\n");
      out.write("\t\t\t\tvar _visible = false;\r\n");
      out.write("\t\t\t\tvar series, categories= [];\r\n");
      out.write("\t\t\t\tvar data = [];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (cont.tcChartList.tcTotalCnt != 0) _visible = true;\r\n");
      out.write("\t\t\t\tcategories = [cont.nowDate]\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (cont.tcChartList.autoCnt != 0) {\r\n");
      out.write("\t\t\t\t\tdata.push({ \"source\": \"XQMS\", \"percentage\": cont.tcChartList.xqmsPercent + \"% \\n\" + \"(\" + cont.tcChartList.autoCnt + \"건\" + \")\" });\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (cont.tcChartList.manualCnt != 0) {\r\n");
      out.write("\t\t\t\t\tdata.push({ \"source\": \"수동테스트\", \"percentage\": cont.tcChartList.manualPercent + \"% \\n\" + \"(\" + cont.tcChartList.manualCnt + \"건\" + \")\" });\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (cont.tcChartList.tcIngCnt != 0) {\r\n");
      out.write("\t\t\t\t\tdata.push({ \"source\": \"미진행\", \"percentage\": cont.tcChartList.ingPercent + \"% \\n\" + \"(\" + cont.tcChartList.tcIngCnt + \"건\" + \")\" });\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#tcChart\").kendoChart({\r\n");
      out.write("\t\t\t\t\tdataSource: {\r\n");
      out.write("\t\t\t\t\t\tdata: data\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tlegend: {\r\n");
      out.write("\t\t\t\t\t\tposition: \"bottom\"\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tseriesDefaults: {\r\n");
      out.write("\t\t\t\t\t\tlabels: {\r\n");
      out.write("\t\t\t\t\t\t\tvisible: _visible\r\n");
      out.write("\t\t\t\t\t\t\t, background: \"transparent\"\r\n");
      out.write("\t\t\t\t\t\t\t, template: \"#= category # \\n #= value#\"\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, chartArea: {\r\n");
      out.write("\t\t\t\t\t\theight: 470\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t, series: [{\r\n");
      out.write("\t\t\t\t\t\ttype: \"pie\"\r\n");
      out.write("\t\t\t\t\t\t, field: \"percentage\"\r\n");
      out.write("\t\t\t\t\t\t, categoryField: \"source\"\r\n");
      out.write("\t\t\t\t\t\t, startAngle: 150\r\n");
      out.write("\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\tseriesColors: [\"#aacd6e\",\"#548687\",\"#58c9b9\"],\r\n");
      out.write("\t\t\t\t\tseriesClick: function() {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"/qa/tc/tcList?pid=\"+cont.pid;\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tvalueAxis: {\r\n");
      out.write("\t\t\t\t\t\tline: {\r\n");
      out.write("\t\t\t\t\t\t\tvisible: false\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t,min: 0\r\n");
      out.write("\t\t\t\t\t\t,max : 1\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tcategoryAxis: {\r\n");
      out.write("\t\t\t\t\t\tcategories: categories,\r\n");
      out.write("\t\t\t\t\t\tmajorGridLines: {\r\n");
      out.write("\t\t\t\t\t\t\tvisible: false\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\ttooltip: {\r\n");
      out.write("\t\t\t\t\t\tvisible: true,\r\n");
      out.write("\t\t\t\t\t\ttemplate: \"#= category # - #= value #\"\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\toverlay: {\r\n");
      out.write("\t\t\t\t\t\tgradient: \"none\"\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getFlawChart: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/qa/project/getFlawChartList?pid=\"+cont.pid, function(data){\r\n");
      out.write("\t\t\t\t\tif (data.flawChartList.testFailCnt > 0) {\r\n");
      out.write("\t\t\t\t\t\tcont.flawChartList = data.flawChartList; \r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$('#flawChartDiv').hide();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, goFlawList: function() {\r\n");
      out.write("\t\t\t\tlocation.href = \"/qa/flaw/flawList?pid=\" + cont.pid;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, setRotate: function(percent) {\r\n");
      out.write("\t\t\t\tvar retVal = 0;\r\n");
      out.write("\t\t\t\t// 1% ~ 50% 사이에서는 (해당% * 3.6deg) 스타일 적용\r\n");
      out.write("\t\t\t\t// 50% ~ 100% 사이에서는 (100%-해당%) * -3.6deg 스타일 적용 , grape 태그에 over 클래스 추가\r\n");
      out.write("\t\t\t\tif (percent>0 && percent<=50) {\r\n");
      out.write("\t\t\t\t\tretVal = (percent*3.6);\r\n");
      out.write("\t\t\t\t} else if (percent>50 && percent<=100) {\r\n");
      out.write("\t\t\t\t\tretVal = (100-percent)*-3.6;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn retVal+\"deg\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/qa/projectMain.jsp(117,9) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/qa/projectMain.jsp(121,21) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("C300");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f1 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f1.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f1.setParent(null);
    // /WEB-INF/views/qa/projectMain.jsp(122,20) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f1.setCodeType("D100");
    int _jspx_eval_nl_005fcodeListJson_005f1 = _jspx_th_nl_005fcodeListJson_005f1.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
    return false;
  }
}
