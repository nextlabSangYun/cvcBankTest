/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-07-12 07:23:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.bmt.issue;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class decisionMakingMng_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/nextlab.tld", Long.valueOf(1524211545637L));
    _jspx_dependants.put("jar:file:/D:/cvcbank/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mngbot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1524211722455L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"/css/kendo.common-material.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/css/kendo.material.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/kendo.all.min.js\"></script>\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"sub_layout has_snb\" v-if=\"isCheck\">\r\n");
      out.write("\t\t<div class=\"tit_wrap\">\r\n");
      out.write("\t\t\t<p class=\"cate_tit\">투표 설정</p>\r\n");
      out.write("\t\t\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t\t\t<button class=\"g_btn03\" @click=\"btnSave\">저장</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"g_table04\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<caption></caption>\r\n");
      out.write("\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t<col style=\"width: 170px;\">\r\n");
      out.write("\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>등록일시</th>\r\n");
      out.write("\t\t\t\t\t\t<td>{{decisionMaking.regDtm | dateTimeFormat}}</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>투표제목<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"reg insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"full\" type=\"text\" v-model.trim=\"decisionMaking.voteSubject\">\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>투표내용<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"reg insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<textarea class=\"full\" cols=\"30\" rows=\"5\" v-model.trim=\"decisionMaking.voteCont\" placeholder=\"투표 내용을 입력하세요.\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>투표대상<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"reg insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"sel_sort\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<user-select ref=\"userSelect\" :add-fn=\"addVoterList\"></user-select>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"reg_list\" v-show=\"decisionMaking.voterList.length>0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li v-for=\"(p, index) in decisionMaking.voterList\"><span>{{p.userNm}}({{p.userGroupNm}})</span><button class=\"del\" @click=\"delVoterList(index)\"></button></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>진행상황<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<select v-model=\"decisionMaking.voteStat\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"\">- 선택 -</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option v-for=\"list in getVoteStatCodeList\" :value=\"list.codeId\">{{list.codeNm}}</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr v-if=\"decisionMaking.voteStat == 'C304'\">\r\n");
      out.write("\t\t\t\t\t\t<th>최종결과<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<select v-model=\"decisionMaking.lastResultCd\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"\">- 선택 -</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option v-for=\"list in getLastResultCodeList\" :value=\"list.codeId\">{{list.codeNm}}</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr v-else>\r\n");
      out.write("\t\t\t\t\t\t<th>최종결과<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<select disabled=\"disabled\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"\">- 선택 -</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr v-if=\"decisionMaking.voteStat == 'C304'\">\r\n");
      out.write("\t\t\t\t\t\t<th>총평<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"reg insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<textarea class=\"full\" cols=\"30\" rows=\"5\" v-model.trim=\"decisionMaking.voteGeneralReview\" placeholder=\"총평을 입력하세요.\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr v-else>\r\n");
      out.write("\t\t\t\t\t\t<th>총평<strong>*</strong></th>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"reg insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t<textarea class=\"full\" cols=\"30\" rows=\"5\" disabled=\"disabled\" placeholder=\"총평을 입력하세요.\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"tit_wrap mgtop40\">\r\n");
      out.write("\t\t\t<p class=\"cate_tit\">이슈 목록</p>\r\n");
      out.write("\t\t\t<div class=\"btn_wrap\">\r\n");
      out.write("\t\t\t\t<button class=\"g_btn04\" @click=\"issueExcelDown\"><span>다운로드</span></button>\r\n");
      out.write("\t\t\t\t<button class=\"g_btn01\" @click=\"addIssueLargeAdd\">이슈 추가</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"issue_list\" v-for=\"(issue, index) in decisionMaking.issueList\">\r\n");
      out.write("\t\t\t<div class=\"list_title\">\r\n");
      out.write("\t\t\t\t<p># {{index + 1}}</p>\r\n");
      out.write("\t\t\t\t<button @click=\"btnIssueDel(issue.issueId)\"></button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"table_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"g_table04 target_height\">\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<caption></caption>\r\n");
      out.write("\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<col style=\"width: 150px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>이슈제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{issue.issueSubject}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"insert_con\">{{issue.issueModel}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<tr> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\t<th>중요도</th> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\t<td>{{ issue.importance | code(issueImportanceCode) }}</td> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t</tr> -->\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{issue.issueLcateCd | code(lCateNm)}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>이슈내용</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><span v-html=\"issue.issueCont\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>첨부파일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"insert_con\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<ul class=\"inc_file\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<li v-for=\"(file, index) in issue.issueFileList\"><a @click=\"getFileDown(file)\">{{file.orgFileNm}}</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"vote_result mirror_height\">\r\n");
      out.write("\t\t\t\t\t<p class=\"th_title\">투표현황</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"back_circle\">\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"vote_num pass\">{{issue.passCnt}}</p>\r\n");
      out.write("\t\t\t\t\t\t\t<p>Pass</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"vote_num fail\">{{issue.failCnt}}</p>\r\n");
      out.write("\t\t\t\t\t\t\t<p>Fail</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"vote_num\">{{issue.totalVoterCnt - issue.passCnt - issue.failCnt}}</p>\r\n");
      out.write("\t\t\t\t\t\t\t<p>미응답</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"g_table\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<caption></caption>\r\n");
      out.write("\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width: 5%;\">\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width: 17%;\">\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width: 8%;\">\r\n");
      out.write("\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width: 15%;\">\r\n");
      out.write("\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<th>No.</th>\r\n");
      out.write("\t\t\t\t\t\t<th>투표자</th>\r\n");
      out.write("\t\t\t\t\t\t<th>투표결과</th>\r\n");
      out.write("\t\t\t\t\t\t<th>총평</th>\r\n");
      out.write("\t\t\t\t\t\t<th>투표일시</th>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr v-for=\"(management, index) in issue.voteManagementList\">\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{index + 1}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{management.userNm}}({{management.userGroupNm}})</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td :class=\"management.voteResultCd == 'B301' ? 'pass' : 'fail'\">{{ management.voteResultCd | code(lastResultCodeStr) }}</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"l_align\"><div class=\"long_txt\" v-html=\"management.voteComment\"></div></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>{{management.modDtm | dateTimeFormat}}</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr v-if=\"issue.voteManagementList.length == 0\">\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"5\">투표 내역이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"tit_wrap mgtop40\">\r\n");
      out.write("\t\t\t<p class=\"cate_tit\">이슈 별 투표현황</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"issue_list\" v-for=\"(issue, index) in decisionMaking.issueList\">\r\n");
      out.write("\t\t\t<div class=\"list_title\">\r\n");
      out.write("\t\t\t\t<p># {{index + 1}}</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"table_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"g_table04\">\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<caption></caption>\r\n");
      out.write("\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<col style=\"width: 150px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<col>\r\n");
      out.write("\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>이슈제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{issue.issueSubject}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>측정모델</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"insert_con\">{{issue.issueModel}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<tr> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\t<th>중요도</th> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\t<td>{{ issue.importance | code(issueImportanceCode) }}</td> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t</tr> -->\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>대분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>{{issue.issueLcateCd | code(lCateNm)}}</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>투표현황</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"back_circle\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"vote_num pass\">{{issue.passCnt}}</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p>Pass</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"vote_num fail\">{{issue.failCnt}}</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p>Fail</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p class=\"vote_num\">{{issue.totalVoterCnt - issue.passCnt - issue.failCnt}}</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<p>미응답</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"chart\">\r\n");
      out.write("\t\t\t\t\t<div class=\"chartPointer\" :id=\"issue.issueId\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"sub_layout has_snb\" v-else>\r\n");
      out.write("\t\t<div class=\"cont_wrap\">\r\n");
      out.write("\t\t\t<div class=\"vote_none\">\r\n");
      out.write("\t\t\t\t<p>등록된 투표가 없습니다.</p>\r\n");
      out.write("\t\t\t\t<button class=\"big_btn01\" @click=\"addVote\">투표 개설하기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar view = new Vue({\r\n");
      out.write("\t\tel: '.content'\r\n");
      out.write("\t\t, data: {\r\n");
      out.write("\t\t\tpid: '");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, authId: '");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, userId: '");
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, isCheck: false\r\n");
      out.write("\t\t\t, isAdmin: false\r\n");
      out.write("\t\t\t, isChart: false\r\n");
      out.write("\t\t\t, isVote: false\r\n");
      out.write("\t\t\t, decisionMaking: {\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, voteStatCodeStr: '");
      if (_jspx_meth_nl_005fcodeListJson_005f0(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, voteStatFilter: ['C301', 'C304']\r\n");
      out.write("\t\t\t, voteStatCodeList: []\r\n");
      out.write("\t\t\t, lastResultCodeStr: '");
      if (_jspx_meth_nl_005fcodeListJson_005f1(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, lastResultFilter: ['B301', 'B302']\r\n");
      out.write("\t\t\t, lastResultCodeList: []\r\n");
      out.write("\t\t\t, issueImportanceCode: '");
      if (_jspx_meth_nl_005fcodeListJson_005f2(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t\t, lCateNm: '");
      if (_jspx_meth_nl_005fcodeListJson_005f3(_jspx_page_context))
        return;
      out.write("'\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, beforeMount: function() {\r\n");
      out.write("\t\t\tthis.$nextTick(function() {\r\n");
      out.write("\t\t\t\tthis.voteStatCodeList = JSON.parse(decodeURIComponent(this.voteStatCodeStr));\r\n");
      out.write("\t\t\t\tthis.lastResultCodeList = JSON.parse(decodeURIComponent(this.lastResultCodeStr));\r\n");
      out.write("\t\t\t\tthis.getVote();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, mounted: function() {\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, updated: function() {\r\n");
      out.write("\t\t\tif (!this.isChart) {\r\n");
      out.write("\t\t\t\tthis.setIssueChart();\r\n");
      out.write("\t\t\t\tthis.isChart = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (!this.isVote) {\r\n");
      out.write("\t\t\t\tthis.setVoteTable();\r\n");
      out.write("\t\t\t\tthis.isVote = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvoteStateHeight();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, computed: {\r\n");
      out.write("\t\t\tgetVoteStatCodeList: function() {\r\n");
      out.write("\t\t\t\tvar voteStatFilter = this.voteStatFilter;\r\n");
      out.write("\t\t\t\treturn this.voteStatCodeList.filter(function(voteStatCode) {\r\n");
      out.write("\t\t\t\t\treturn voteStatFilter.some(function(m) {\r\n");
      out.write("\t\t\t\t\t\treturn voteStatCode.codeId === m;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}).sort(function(a,b) {\r\n");
      out.write("\t\t\t\t\treturn a.menuOrder - b.menuOrder;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getLastResultCodeList: function() {\r\n");
      out.write("\t\t\t\tvar lastResultFilter = this.lastResultFilter;\r\n");
      out.write("\t\t\t\treturn this.lastResultCodeList.filter(function(lastResultCode) {\r\n");
      out.write("\t\t\t\t\treturn lastResultFilter.some(function(m) {\r\n");
      out.write("\t\t\t\t\t\treturn lastResultCode.codeId === m;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}).sort(function(a,b) {\r\n");
      out.write("\t\t\t\t\treturn a.menuOrder - b.menuOrder;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, methods: {\r\n");
      out.write("\t\t\tgetVote: function() {\r\n");
      out.write("\t\t\t\t$.get(\"/bmt/issue/getVote?pid=\"+ pid, function(data){\r\n");
      out.write("\t\t\t\t\tif (data.decisionMaking != null) {\r\n");
      out.write("\t\t\t\t\t\tview.isCheck = true;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tdata.decisionMaking = {};\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tview.decisionMaking = data.decisionMaking;\r\n");
      out.write("\t\t\t\t\tif (view.authId === 'AU002') {\r\n");
      out.write("\t\t\t\t\t\tview.isAdmin = true;\r\n");
      out.write("\t\t\t\t\t\tif (view.decisionMaking.issueList != null) {\r\n");
      out.write("\t\t\t\t\t\t\tfor (var i=0; i<view.decisionMaking.issueList.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar issue = view.decisionMaking.issueList[i];\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tissue.issueCont = issue.issueCont.replace(/(?:\\n)/g, '<br>');\r\n");
      out.write("\t\t\t\t\t\t\t\tissue.issueCont.split('\\n').join('<br>');\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tif (issue.voteManagementList.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor (var j=0; j<issue.voteManagementList.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar voteManagement = issue.voteManagementList[j];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar voteCommentStr = '<span>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvoteCommentStr += voteManagement.voteComment.split('\\n').join('</span><span>');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvoteCommentStr += '</span>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvoteManagement.voteComment = voteCommentStr;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} else if (view.decisionMaking.voteStat == 'C304') {\r\n");
      out.write("\t\t\t\t\t\tfor (var i=0; i<view.decisionMaking.issueList.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\tvar issue = view.decisionMaking.issueList[i];\r\n");
      out.write("\t\t\t\t\t\t\tif (issue.voteManagementList.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tfor (var j=0; j<issue.voteManagementList.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar voteManagement = issue.voteManagementList[j];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar voteCommentStr = '<span>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvoteCommentStr += voteManagement.voteComment.split('\\n').join('</span><span>');\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvoteCommentStr += '</span>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvoteManagement.voteComment = voteCommentStr;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar voteGeneralReviewStr = '<span>';\r\n");
      out.write("\t\t\t\t\t\tvoteGeneralReviewStr += view.decisionMaking.voteGeneralReview.split('\\n').join('</span><span>');\r\n");
      out.write("\t\t\t\t\t\tvoteGeneralReviewStr += '</span>';\r\n");
      out.write("\t\t\t\t\t\tview.decisionMaking.voteGeneralReview = voteGeneralReviewStr;\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar voteContStr = '<span>';\r\n");
      out.write("\t\t\t\t\t\tvoteContStr += view.decisionMaking.voteCont.split('\\n').join('</span><span>');\r\n");
      out.write("\t\t\t\t\t\tvoteContStr += '</span>';\r\n");
      out.write("\t\t\t\t\t\tview.decisionMaking.voteCont = voteContStr;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tif (view.decisionMaking.voteCont != null) {\r\n");
      out.write("\t\t\t\t\t\t\tvar voteContStr = '<span>';\r\n");
      out.write("\t\t\t\t\t\t\tvoteContStr += view.decisionMaking.voteCont.split('\\n').join('</span><span>');\r\n");
      out.write("\t\t\t\t\t\t\tvoteContStr += '</span>';\r\n");
      out.write("\t\t\t\t\t\t\tview.decisionMaking.voteCont = voteContStr;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (view.decisionMaking.lastResultCd === null) {\r\n");
      out.write("\t\t\t\t\t\tview.decisionMaking.lastResultCd = \"\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, addVoterList: function(data) {\r\n");
      out.write("\t\t\t\tvar chk = this.decisionMaking.voterList.some(function(p) {\r\n");
      out.write("\t\t\t\t\treturn p.voterId == data.userId;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (!chk) {\r\n");
      out.write("\t\t\t\t\tdata.voterId = data.userId;\r\n");
      out.write("\t\t\t\t\tthis.decisionMaking.voterList.push(data);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"이미 추가된 참여인력입니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, delVoterList: function(index) {\r\n");
      out.write("\t\t\t\tthis.decisionMaking.voterList.splice(index, 1);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, btnSave: function() {\r\n");
      out.write("\t\t\t\tvar param = this.decisionMaking;\r\n");
      out.write("\t\t\t\tif (param.voteSubject.length < 1){\r\n");
      out.write("\t\t\t\t\talert(\"투표 제목을 입력하세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (param.voteCont.length < 1){\r\n");
      out.write("\t\t\t\t\talert(\"투표 내용을 입력하세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (param.voterList.length < 1) {\r\n");
      out.write("\t\t\t\t\talert(\"투표 대상자를 추가해 주세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (param.voteStat == '') {\r\n");
      out.write("\t\t\t\t\talert(\"투표 진행상황을 선택해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (param.voteStat == 'C304') {\r\n");
      out.write("\t\t\t\t\tif (param.lastResultCd == '') {\r\n");
      out.write("\t\t\t\t\t\talert(\"투표 최종결과를 선택해주세요.\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif (isEmpty(param.voteGeneralReview) || param.voteGeneralReview.length < 1) {\r\n");
      out.write("\t\t\t\t\t\talert(\"총평을 입력해주세요.\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar cmsg = \"수정하시겠습니까?\";\r\n");
      out.write("\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype: \"post\"\r\n");
      out.write("\t\t\t\t\t\t, url: \"/bmt/issue/modVotePrc\"\r\n");
      out.write("\t\t\t\t\t\t, contentType: \"application/json\"\r\n");
      out.write("\t\t\t\t\t\t, data : JSON.stringify(param)\r\n");
      out.write("\t\t\t\t\t\t, success: function(data){\r\n");
      out.write("\t\t\t\t\t\t\tif (data.save){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"수정되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(data.message);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, error: function(xhr, status, error){\r\n");
      out.write("\t\t\t\t\t\t\talert($(xhr.responseText).text());\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getFileDown: function(list) {\r\n");
      out.write("\t\t\t\tfileDown(list.filePath, list.fileNm, list.orgFileNm);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, addVote: function() {\r\n");
      out.write("\t\t\t\tif (this.authId === 'AU002') {\r\n");
      out.write("\t\t\t\t\tvar pid = this.pid;\r\n");
      out.write("\t\t\t\t\t$.get(\"/bmt/issue/getCheckVote?pid=\"+ pid, function(data){\r\n");
      out.write("\t\t\t\t\t\tif (data.isCheck) {\r\n");
      out.write("\t\t\t\t\t\t\talert('이미 등록된 투표가 있습니다.');\r\n");
      out.write("\t\t\t\t\t\t\tlocation.href = '/bmt/issue/decisionMaking?pid='+pid;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tpopup('/bmt/issue/voteForm?pid='+pid, '의사결정지원', 1080, 500, 'yes');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert('접근권한이 없습니다.');\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, btnCommentSave: function() {\r\n");
      out.write("\t\t\t\tvar voteManagementList = [];\r\n");
      out.write("\t\t\t\tvar voteResultCdData = [];\r\n");
      out.write("\t\t\t\tvar voteCommentData = [];\r\n");
      out.write("\t\t\t\t$(\"[name='voteResultCd']\").each(function() {\r\n");
      out.write("\t\t\t\t\tvoteResultCdData.push({\r\n");
      out.write("\t\t\t\t\t\t'issueId' : $(this).parent().parent().parent().parent('table').attr('issueId')\r\n");
      out.write("\t\t\t\t\t\t, 'voteResultCd' : $(this).val()\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"[name='voteComment']\").each(function() {\r\n");
      out.write("\t\t\t\t\tvoteCommentData.push({\r\n");
      out.write("\t\t\t\t\t\t'issueId' : $(this).parent().parent().parent().parent('table').attr('issueId')\r\n");
      out.write("\t\t\t\t\t\t, 'voteComment' : $(this).val()\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar isOk = true;\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < voteResultCdData.length; i++) {\r\n");
      out.write("\t\t\t\t\tfor (var j = 0; j < voteCommentData.length; j++) {\r\n");
      out.write("\t\t\t\t\t\tif (voteResultCdData[i].issueId === voteCommentData[j].issueId) {\r\n");
      out.write("\t\t\t\t\t\t\tif (isEmpty(voteResultCdData[i].voteResultCd) || isEmpty(voteCommentData[j].voteComment)) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (isEmpty(voteResultCdData[i].voteResultCd) && !isEmpty(voteCommentData[j].voteComment)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tisOk = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tif (!isEmpty(voteResultCdData[i].voteResultCd) && isEmpty(voteCommentData[j].voteComment)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tisOk = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvoteManagementList.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'pid' : this.pid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, 'voteSeq' : this.decisionMaking.voteSeq\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, 'issueId' : voteResultCdData[i].issueId\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, 'voteResultCd' : voteResultCdData[i].voteResultCd\r\n");
      out.write("\t\t\t\t\t\t\t\t\t, 'voteComment' : voteCommentData[j].voteComment\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (!isOk || voteManagementList.length == 0) {\r\n");
      out.write("\t\t\t\t\talert(\"투표한 이슈의 코멘트와 결과를 모두 입력해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar cmsg = \"저장 하시겠습니까?\";\r\n");
      out.write("\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype: \"post\"\r\n");
      out.write("\t\t\t\t\t\t, url: \"/bmt/issue/regVoteManagementPrc\"\r\n");
      out.write("\t\t\t\t\t\t, contentType: \"application/json\"\r\n");
      out.write("\t\t\t\t\t\t, data : JSON.stringify(voteManagementList)\r\n");
      out.write("\t\t\t\t\t\t, success: function(data){\r\n");
      out.write("\t\t\t\t\t\t\tif (data.save){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"투표가 완료되었습니다. 완료 이전까지 입력값의 수정이 가능합니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(data.message);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, error: function(xhr, status, error){\r\n");
      out.write("\t\t\t\t\t\t\talert($(xhr.responseText).text());\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, getCheckVoter: function() {\r\n");
      out.write("\t\t\t\tvar pid = this.pid;\r\n");
      out.write("\t\t\t\tvar voteSeq = this.decisionMaking.voteSeq;\r\n");
      out.write("\t\t\t\t$.get(\"/bmt/issue/getCheckVoter?pid=\"+ pid+\"&voteSeq=\"+voteSeq, function(data){\r\n");
      out.write("\t\t\t\t\tif (data.isCheck) {\r\n");
      out.write("\t\t\t\t\t\tview.btnCommentSave();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert('투표 대상자가 아닙니다.');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, setVoteTable: function() {\r\n");
      out.write("\t\t\t\t$('.voteTable').each(function() {\r\n");
      out.write("\t\t\t\t\tvar issueId = $(this).attr('issueId');\r\n");
      out.write("\t\t\t\t\tfor (var i=0; i < view.decisionMaking.issueList.length; i++){\r\n");
      out.write("\t \t\t\t\t\tvar issue = view.decisionMaking.issueList[i];\r\n");
      out.write("\t \t\t\t\t\tif (issueId === issue.issueId) {\r\n");
      out.write("\t \t\t\t\t\t\tfor (var j=0; j < issue.voteManagementList.length; j++) {\r\n");
      out.write("\t \t\t\t\t\t\t\tvar voteManagement = issue.voteManagementList[j];\r\n");
      out.write("\t \t\t\t\t\t\t\tif (view.userId === voteManagement.voterId) {\r\n");
      out.write("\t \t\t\t\t\t\t\t\t$(this).find('[name=\"voteResultCd\"]').val(voteManagement.voteResultCd);\r\n");
      out.write("\t \t\t\t\t\t\t\t\t$(this).find('[name=\"voteComment\"]').val(voteManagement.voteComment);\r\n");
      out.write("\t \t\t\t\t\t\t\t}\r\n");
      out.write("\t \t\t\t\t\t\t}\r\n");
      out.write("\t \t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, setIssueChart: function() {\r\n");
      out.write("\t\t\t\tif (this.decisionMaking.issueList == null) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar _visible = true;\r\n");
      out.write("\t\t\t\tvar series, categories= [];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write(" \t\t\t\tfor (var i=0; i < this.decisionMaking.issueList.length; i++){\r\n");
      out.write(" \t\t\t\t\tvar issue = view.decisionMaking.issueList[i];\r\n");
      out.write(" \t\t\t\t\tvar issueId = issue.issueId;\r\n");
      out.write(" \t\t\t\t\tvar passCnt = issue.passCnt;\r\n");
      out.write(" \t\t\t\t\tvar failCnt = issue.failCnt;\r\n");
      out.write(" \t\t\t\t\tvar noVoteCnt = issue.totalVoterCnt - issue.failCnt - issue.passCnt;\r\n");
      out.write(" \t\t\t\t\tvar passPercent = parseInt(issue.passCnt / issue.totalVoterCnt * 100);\r\n");
      out.write(" \t\t\t\t\tvar failPercent = parseInt(issue.failCnt / issue.totalVoterCnt * 100);\r\n");
      out.write(" \t\t\t\t\tvar noVotePercent = parseInt((issue.totalVoterCnt - issue.failCnt - issue.passCnt) / issue.totalVoterCnt * 100);\r\n");
      out.write(" \t\t\t\t\t\r\n");
      out.write(" \t\t\t\t\tcategories = ['issue'];\r\n");
      out.write(" \t\t\t\t\t\r\n");
      out.write(" \t\t\t\t\tvar data = [];\r\n");
      out.write("\t\t\t\t\tdata.push({ \"source\": \"Pass\", \"percentage\": passPercent + \"% \\n\" + \"(\" + passCnt + \"건\" + \")\" });\r\n");
      out.write("\t\t\t\t\tdata.push({ \"source\": \"Fail\", \"percentage\": failPercent + \"% \\n\" + \"(\" + failCnt + \"건\" + \")\" });\r\n");
      out.write("\t\t\t\t\tdata.push({ \"source\": \"미응답\", \"percentage\": noVotePercent + \"% \\n\" + \"(\" + noVoteCnt + \"건\" + \")\" });\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#\" + issueId).kendoChart({\r\n");
      out.write("\t\t\t\t\t\tdataSource: {\r\n");
      out.write("\t\t\t\t\t\t\tdata: data\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tlegend: {\r\n");
      out.write("\t\t\t\t\t\t\tposition: \"custom\"\r\n");
      out.write("\t\t\t\t\t\t\t,orientation: \"horizontal\"\r\n");
      out.write("\t\t\t\t\t\t\t,offsetY: 250\r\n");
      out.write("\t\t\t\t\t\t\t,offsetX: 80\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tseriesDefaults: {\r\n");
      out.write("\t\t\t\t\t\t\tlabels: {\r\n");
      out.write("\t\t\t\t\t\t\t\tvisible: _visible\r\n");
      out.write("\t\t\t\t\t\t\t\t, background: \"transparent\"\r\n");
      out.write("\t\t\t\t\t\t\t\t, template: \"#= category # \\n #= value#\"\r\n");
      out.write("\t\t\t\t\t\t\t\t, distance: 20\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, chartArea: {\r\n");
      out.write("\t\t\t\t\t\t\theight: 300\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, series: [{\r\n");
      out.write("\t\t\t\t\t\t\ttype: \"pie\"\r\n");
      out.write("\t\t\t\t\t\t\t, field: \"percentage\"\r\n");
      out.write("\t\t\t\t\t\t\t, categoryField: \"source\"\r\n");
      out.write("\t\t\t\t\t\t\t, startAngle: 150\r\n");
      out.write("\t\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\t\tseriesColors: [\"#4a66cc\",\"#f45858\",\"#c5c5c5\"],\r\n");
      out.write("\t\t\t\t\t\tseriesClick: function() {\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tvalueAxis: {\r\n");
      out.write("\t\t\t\t\t\t\tline: {\r\n");
      out.write("\t\t\t\t\t\t\t\tvisible: false\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t,min: 0\r\n");
      out.write("\t\t\t\t\t\t\t,max : 1\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tcategoryAxis: {\r\n");
      out.write("\t\t\t\t\t\t\tcategories: categories,\r\n");
      out.write("\t\t\t\t\t\t\tmajorGridLines: {\r\n");
      out.write("\t\t\t\t\t\t\t\tvisible: false\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\ttooltip: {\r\n");
      out.write("\t\t\t\t\t\t\tvisible: true,\r\n");
      out.write("\t\t\t\t\t\t\ttemplate: \"#= category # - #= value #\"\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\toverlay: {\r\n");
      out.write("\t\t\t\t\t\t\tgradient: \"none\"\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, addIssueLargeAdd: function() {\r\n");
      out.write("\t\t\t\tpopup('/bmt/issue/issueLargeAddForm?pid='+this.pid, '이슈 추가', 1200, 500, 'yes');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, selectIssue: function(issueIds) {\r\n");
      out.write("\t\t\t\tvar issueList = this.decisionMaking.issueList;\r\n");
      out.write("\t\t\t\tfor (var i = issueIds.length-1; i>=0; i--) {\r\n");
      out.write("\t\t\t\t\tvar isOk = false;\r\n");
      out.write("\t\t\t\t\tfor (var j=0; j<issueList.length; j++) {\r\n");
      out.write("\t\t\t\t\t\tif (issueIds[i] === issueList[j].issueId) {\r\n");
      out.write("\t\t\t\t\t\t\tisOk = true;\r\n");
      out.write("\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif (isOk) {\r\n");
      out.write("\t\t\t\t\t\tissueIds.splice(i, 1);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (issueIds.length > 0) {\r\n");
      out.write("\t\t\t\t\tvar pid = this.pid;\r\n");
      out.write("\t\t\t\t\tvar voteSeq = this.decisionMaking.voteSeq;\r\n");
      out.write("\t\t\t\t\tvar param = {\r\n");
      out.write("\t\t\t\t\t\t\tissueIds : issueIds\r\n");
      out.write("\t\t\t\t\t\t\t, pid : pid\r\n");
      out.write("\t\t\t\t\t\t\t, voteSeq : voteSeq\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype: \"post\"\r\n");
      out.write("\t\t\t\t\t\t, url: \"/bmt/issue/regVoteIssuePrc\"\r\n");
      out.write("\t\t\t\t\t\t, contentType: \"application/json\"\r\n");
      out.write("\t\t\t\t\t\t, data : JSON.stringify(param)\r\n");
      out.write("\t\t\t\t\t\t, success: function(data){\r\n");
      out.write("\t\t\t\t\t\t\tif (data.save){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"이슈가 등록되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(data.message);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, error: function(xhr, status, error){\r\n");
      out.write("\t\t\t\t\t\t\talert($(xhr.responseText).text());\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, btnIssueDel: function(issueId) {\r\n");
      out.write("\t\t\t\tvar pid = this.pid;\r\n");
      out.write("\t\t\t\tvar voteSeq = this.decisionMaking.voteSeq;\r\n");
      out.write("\t\t\t\tvar param = {\r\n");
      out.write("\t\t\t\t\t\tissueId : issueId\r\n");
      out.write("\t\t\t\t\t\t, pid : pid\r\n");
      out.write("\t\t\t\t\t\t, voteSeq : voteSeq\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\tvar cmsg = \"이슈를 삭제하시겠습니까?\";\r\n");
      out.write("\t\t\t\tif (confirm(cmsg)){\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype: \"post\"\r\n");
      out.write("\t\t\t\t\t\t, url: \"/bmt/issue/delVoteIssuePrc\"\r\n");
      out.write("\t\t\t\t\t\t, contentType: \"application/json\"\r\n");
      out.write("\t\t\t\t\t\t, data : JSON.stringify(param)\r\n");
      out.write("\t\t\t\t\t\t, success: function(data){\r\n");
      out.write("\t\t\t\t\t\t\tif (data.del){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"이슈가 삭제되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(data.message);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, error: function(xhr, status, error){\r\n");
      out.write("\t\t\t\t\t\t\talert($(xhr.responseText).text());\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, issueExcelDown: function() {\r\n");
      out.write("\t\t\t\tvar param = {\r\n");
      out.write("\t\t\t\t\tpid : this.pid\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\texcelFileDown('/bmt/issue/getVoteMngListExcel', param);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(268,9) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pid}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f1.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(269,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${authId}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
    if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f2.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(270,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userId}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
    if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f0 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f0.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f0.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(277,23) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f0.setCodeType("C300");
    int _jspx_eval_nl_005fcodeListJson_005f0 = _jspx_th_nl_005fcodeListJson_005f0.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f0);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f1 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f1.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f1.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(280,25) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f1.setCodeType("B300");
    int _jspx_eval_nl_005fcodeListJson_005f1 = _jspx_th_nl_005fcodeListJson_005f1.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f1);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f2 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f2.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f2.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(283,27) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f2.setCodeType("B100");
    int _jspx_eval_nl_005fcodeListJson_005f2 = _jspx_th_nl_005fcodeListJson_005f2.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f2);
    return false;
  }

  private boolean _jspx_meth_nl_005fcodeListJson_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  nl:codeListJson
    kr.co.nextlab.tag.CodeListJsonTag _jspx_th_nl_005fcodeListJson_005f3 = (kr.co.nextlab.tag.CodeListJsonTag) _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.get(kr.co.nextlab.tag.CodeListJsonTag.class);
    _jspx_th_nl_005fcodeListJson_005f3.setPageContext(_jspx_page_context);
    _jspx_th_nl_005fcodeListJson_005f3.setParent(null);
    // /WEB-INF/views/bmt/issue/decisionMakingMng.jsp(284,15) name = codeType type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_nl_005fcodeListJson_005f3.setCodeType("D500");
    int _jspx_eval_nl_005fcodeListJson_005f3 = _jspx_th_nl_005fcodeListJson_005f3.doStartTag();
    if (_jspx_th_nl_005fcodeListJson_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fnl_005fcodeListJson_0026_005fcodeType_005fnobody.reuse(_jspx_th_nl_005fcodeListJson_005f3);
    return false;
  }
}
